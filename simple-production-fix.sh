#!/bin/bash
# Simple production fix - copy and paste these commands one by one in SSH

echo "=== SIMPLE PRODUCTION FIX ==="
echo ""
echo "1. First, pull latest code:"
echo "   git pull origin main"
echo ""
echo "2. Create and run the fix script:"
echo "   php -r \""
echo "   require_once 'vendor/autoload.php';"
echo "   \$app = require_once 'bootstrap/app.php';"
echo "   \$kernel = \$app->make(Illuminate\\Contracts\\Console\\Kernel::class);"
echo "   \$kernel->bootstrap();"
echo "   echo 'Laravel loaded' . PHP_EOL;"
echo "   \$role = DB::table('roles')->where('name', 'paramedis')->first();"
echo "   if (!\$role) {"
echo "       \$roleId = DB::table('roles')->insertGetId(['name' => 'paramedis', 'display_name' => 'Paramedic', 'guard_name' => 'web', 'created_at' => now(), 'updated_at' => now()]);"
echo "       \$role = (object)['id' => \$roleId];"
echo "       echo 'Created paramedis role' . PHP_EOL;"
echo "   }"
echo "   DB::table('users')->where('email', 'tina@paramedis.com')->delete();"
echo "   \$userId = DB::table('users')->insertGetId(['name' => 'Tina Paramedis', 'email' => 'tina@paramedis.com', 'email_verified_at' => now(), 'password' => Hash::make('password123'), 'role_id' => \$role->id, 'created_at' => now(), 'updated_at' => now()]);"
echo "   echo 'User created with ID: ' . \$userId . PHP_EOL;"
echo "   \$auth = Auth::attempt(['email' => 'tina@paramedis.com', 'password' => 'password123']);"
echo "   echo 'Auth test: ' . (\$auth ? 'SUCCESS' : 'FAILED') . PHP_EOL;"
echo "   if (\$auth) Auth::logout();"
echo "   Artisan::call('cache:clear');"
echo "   Artisan::call('config:clear');"
echo "   echo 'Fix complete' . PHP_EOL;"
echo "   \""
echo ""
echo "3. If the above is too complex, create a file instead:"
echo "   cat > paramedis_fix.php << 'EOF'"
echo "<?php"
echo "require_once 'vendor/autoload.php';"
echo "\$app = require_once 'bootstrap/app.php';"
echo "\$kernel = \$app->make(Illuminate\\Contracts\\Console\\Kernel::class);"
echo "\$kernel->bootstrap();"
echo "echo 'Laravel loaded' . PHP_EOL;"
echo "\$role = DB::table('roles')->where('name', 'paramedis')->first();"
echo "if (!\$role) {"
echo "    \$roleId = DB::table('roles')->insertGetId(['name' => 'paramedis', 'display_name' => 'Paramedic', 'guard_name' => 'web', 'created_at' => now(), 'updated_at' => now()]);"
echo "    \$role = (object)['id' => \$roleId];"
echo "}"
echo "DB::table('users')->where('email', 'tina@paramedis.com')->delete();"
echo "\$userId = DB::table('users')->insertGetId(['name' => 'Tina Paramedis', 'email' => 'tina@paramedis.com', 'email_verified_at' => now(), 'password' => Hash::make('password123'), 'role_id' => \$role->id, 'created_at' => now(), 'updated_at' => now()]);"
echo "echo 'User created with ID: ' . \$userId . PHP_EOL;"
echo "\$auth = Auth::attempt(['email' => 'tina@paramedis.com', 'password' => 'password123']);"
echo "echo 'Auth test: ' . (\$auth ? 'SUCCESS' : 'FAILED') . PHP_EOL;"
echo "if (\$auth) Auth::logout();"
echo "Artisan::call('cache:clear');"
echo "Artisan::call('config:clear');"
echo "echo 'PARAMEDIS LOGIN FIX COMPLETE' . PHP_EOL;"
echo "?>"
echo "EOF"
echo ""
echo "4. Then run the file:"
echo "   php paramedis_fix.php"
echo ""
echo "=== END INSTRUCTIONS ==="