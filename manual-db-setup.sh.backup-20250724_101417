#\!/bin/bash

echo "üöÄ Manual Database Setup and Test Script for Hostinger"
echo "======================================================"

# SSH Connection Details
SSH_HOST="153.92.8.132"
SSH_USER="u454362045"
SSH_PORT="65002"
SSH_PASSWORD="LaTahzan@01"
DEPLOY_PATH="domains/dokterkuklinic.com/public_html"

echo ""
echo "üìã Connection Details:"
echo "Host: $SSH_HOST"
echo "User: $SSH_USER"
echo "Port: $SSH_PORT"
echo "Path: $DEPLOY_PATH"

echo ""
echo "üîß Step 1: Testing SSH Connection..."
sshpass -p "$SSH_PASSWORD" ssh -p $SSH_PORT -o StrictHostKeyChecking=no \
  "$SSH_USER@$SSH_HOST" "echo 'SSH connection successful\!'"

if [ $? -ne 0 ]; then
    echo "‚ùå SSH connection failed\!"
    exit 1
fi

echo ""
echo "üîß Step 2: Checking MySQL Service..."
sshpass -p "$SSH_PASSWORD" ssh -p $SSH_PORT -o StrictHostKeyChecking=no \
  "$SSH_USER@$SSH_HOST" "
    echo 'Checking MySQL service status...'
    mysqladmin ping -h localhost -u u454362045_u45436245_kli -pLaTahzan@01 2>/dev/null && echo '‚úÖ MySQL is responding' || echo '‚ùå MySQL connection failed'
    
    echo 'Testing database connection with various hosts...'
    for host in localhost 127.0.0.1 mysql.hostinger.com; do
        echo \"Testing \$host...\"
        nc -zv \$host 3306 2>/dev/null && echo \"‚úÖ Port 3306 accessible on \$host\" || echo \"‚ùå Cannot reach \$host:3306\"
    done
  "

echo ""
echo "üîß Step 3: Testing Database User Permissions..."
sshpass -p "$SSH_PASSWORD" ssh -p $SSH_PORT -o StrictHostKeyChecking=no \
  "$SSH_USER@$SSH_HOST" "
    echo 'Testing database user permissions...'
    mysql -h localhost -u u454362045_u45436245_kli -pLaTahzan@01 -e 'SHOW DATABASES;' 2>/dev/null && echo '‚úÖ Database user can connect' || echo '‚ùå Database user cannot connect'
    
    mysql -h localhost -u u454362045_u45436245_kli -pLaTahzan@01 -e 'USE u454362045_u45436245_kli; SHOW TABLES;' 2>/dev/null && echo '‚úÖ Can access target database' || echo '‚ùå Cannot access target database'
  "

echo ""
echo "üîß Step 4: Uploading and Testing Database Connection Script..."
# Upload the test script
sshpass -p "$SSH_PASSWORD" scp -P $SSH_PORT -o StrictHostKeyChecking=no \
  scripts/test-db-connection.php "$SSH_USER@$SSH_HOST:$DEPLOY_PATH/"

# Run the test script
sshpass -p "$SSH_PASSWORD" ssh -p $SSH_PORT -o StrictHostKeyChecking=no \
  "$SSH_USER@$SSH_HOST" "cd $DEPLOY_PATH && php test-db-connection.php"

echo ""
echo "üîß Step 5: Uploading Production Environment..."
# Upload production .env
sshpass -p "$SSH_PASSWORD" scp -P $SSH_PORT -o StrictHostKeyChecking=no \
  .env.production "$SSH_USER@$SSH_HOST:$DEPLOY_PATH/.env"

echo "‚úÖ Production .env uploaded"

echo ""
echo "üîß Step 6: Installing Dependencies and Testing Laravel..."
sshpass -p "$SSH_PASSWORD" ssh -p $SSH_PORT -o StrictHostKeyChecking=no \
  "$SSH_USER@$SSH_HOST" "
    cd $DEPLOY_PATH
    echo 'Ensuring Composer 2 is available...'
    if [ ! -f ~/composer2 ]; then 
      echo 'Downloading Composer 2...'; 
      curl -sS https://getcomposer.org/installer | php -d memory_limit=-1 && 
      mv composer.phar ~/composer2 && 
      chmod +x ~/composer2; 
    fi
    
    echo 'Installing Composer dependencies with Composer 2...'
    ~/composer2 install --no-interaction --prefer-dist --optimize-autoloader --no-dev && echo '‚úÖ Dependencies installed' || echo '‚ùå Dependency installation failed'
    
    echo 'Fixing syntax errors...'
    sed -i 's/\\\\!/!/g' routes/web.php
    
    echo 'Testing Laravel configuration...'
    php artisan config:cache && echo '‚úÖ Config cache successful' || echo '‚ùå Config cache failed'
    php artisan route:cache && echo '‚úÖ Route cache successful' || echo '‚ö†Ô∏è Route cache had warnings'
    php artisan --version && echo '‚úÖ Laravel is working' || echo '‚ùå Laravel has issues'
  "

echo ""
echo "üéâ Manual setup completed\!"
echo ""
echo "üìù If you see errors above, please:"
echo "1. Contact Hostinger support to verify database credentials"
echo "2. Ensure MySQL service is running"
echo "3. Verify user permissions with GRANT statement"
echo "4. Check if your hosting plan supports the required PHP extensions"

