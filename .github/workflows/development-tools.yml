name: Development Tools & Utilities

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - database-backup
          - database-restore
          - clear-caches
          - rebuild-assets
          - run-seeders
          - health-check
          - sync-vendor
          - optimize-production
      
      backup_name:
        description: 'Backup name (for restore)'
        required: false
        type: string
        
      seeder_class:
        description: 'Seeder class name'
        required: false
        type: string
        default: 'DatabaseSeeder'

jobs:
  development-action:
    name: ${{ github.event.inputs.action }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        if: contains(fromJson('["sync-vendor", "rebuild-assets", "run-seeders"]'), github.event.inputs.action)

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        if: contains(fromJson('["sync-vendor", "rebuild-assets", "run-seeders"]'), github.event.inputs.action)
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: github.event.inputs.action == 'rebuild-assets'
        with:
          node-version: 20
          cache: 'npm'

      - name: Database Backup
        if: github.event.inputs.action == 'database-backup'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            
            BACKUP_DIR="/home/u454362045/backups/manual"
            TIMESTAMP=$(date +%Y%m%d_%H%M%S)
            
            mkdir -p $BACKUP_DIR
            
            echo "📦 Creating database backup..."
            cp database/database.sqlite $BACKUP_DIR/database_$TIMESTAMP.sqlite
            
            echo "📁 Creating full backup..."
            tar -czf $BACKUP_DIR/full_backup_$TIMESTAMP.tar.gz \
              --exclude='vendor' \
              --exclude='node_modules' \
              --exclude='storage/logs/*' \
              .
            
            echo "✅ Backup completed:"
            ls -la $BACKUP_DIR/
            
            echo "🧹 Keeping only last 10 backups..."
            cd $BACKUP_DIR
            ls -t *.sqlite | tail -n +11 | xargs -r rm
            ls -t *.tar.gz | tail -n +6 | xargs -r rm

      - name: Database Restore
        if: github.event.inputs.action == 'database-restore'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            
            BACKUP_DIR="/home/u454362045/backups/manual"
            BACKUP_NAME="${{ github.event.inputs.backup_name }}"
            
            if [ -z "$BACKUP_NAME" ]; then
              echo "📋 Available backups:"
              ls -la $BACKUP_DIR/*.sqlite
              echo "❌ No backup name provided"
              exit 1
            fi
            
            if [ -f "$BACKUP_DIR/$BACKUP_NAME" ]; then
              echo "📥 Restoring database from $BACKUP_NAME..."
              cp database/database.sqlite database/database.sqlite.pre_restore
              cp $BACKUP_DIR/$BACKUP_NAME database/database.sqlite
              echo "✅ Database restored successfully"
            else
              echo "❌ Backup file not found: $BACKUP_NAME"
              echo "Available backups:"
              ls -la $BACKUP_DIR/
              exit 1
            fi

      - name: Clear Caches
        if: github.event.inputs.action == 'clear-caches'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            
            echo "🧹 Clearing all caches..."
            php artisan optimize:clear
            php artisan filament:clear-cached-components
            
            echo "🗑️ Clearing manual cache files..."
            rm -rf bootstrap/cache/*.php
            rm -rf storage/framework/cache/data/*
            rm -rf storage/framework/views/*
            
            echo "✅ All caches cleared"

      - name: Rebuild Assets
        if: github.event.inputs.action == 'rebuild-assets'
        run: |
          npm ci
          npm run build
          
          # Create upload package
          tar -czf assets.tar.gz public/build/

      - name: Upload New Assets
        if: github.event.inputs.action == 'rebuild-assets'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "assets.tar.gz"
          target: "/home/u454362045/"

      - name: Deploy New Assets
        if: github.event.inputs.action == 'rebuild-assets'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            
            echo "🎨 Deploying new assets..."
            rm -rf public/build.old
            mv public/build public/build.old
            
            cd /home/u454362045
            tar -xzf assets.tar.gz
            mv public/build /home/u454362045/domains/dokterkuklinik.com/public_html/public/
            rm assets.tar.gz
            
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            php artisan view:clear
            
            echo "✅ Assets deployed successfully"

      - name: Sync Vendor
        if: github.event.inputs.action == 'sync-vendor'
        run: |
          composer install --no-dev --optimize-autoloader
          tar -czf vendor.tar.gz vendor/

      - name: Upload Vendor
        if: github.event.inputs.action == 'sync-vendor'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "vendor.tar.gz"
          target: "/home/u454362045/"

      - name: Deploy Vendor
        if: github.event.inputs.action == 'sync-vendor'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            
            echo "📦 Deploying vendor dependencies..."
            rm -rf vendor.old
            mv vendor vendor.old
            
            cd /home/u454362045
            tar -xzf vendor.tar.gz
            mv vendor /home/u454362045/domains/dokterkuklinik.com/public_html/
            rm vendor.tar.gz
            
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            composer dump-autoload --optimize
            
            echo "✅ Vendor deployed successfully"

      - name: Run Seeders
        if: github.event.inputs.action == 'run-seeders'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            
            SEEDER_CLASS="${{ github.event.inputs.seeder_class }}"
            
            if [ -z "$SEEDER_CLASS" ]; then
              SEEDER_CLASS="DatabaseSeeder"
            fi
            
            echo "🌱 Running seeder: $SEEDER_CLASS"
            php artisan db:seed --class=$SEEDER_CLASS --force
            
            echo "✅ Seeder completed"
            echo "📊 Current database counts:"
            php artisan tinker --execute="
            echo 'Users: ' . App\Models\User::count() . PHP_EOL;
            echo 'Roles: ' . Spatie\Permission\Models\Role::count() . PHP_EOL;
            "

      - name: Health Check
        if: github.event.inputs.action == 'health-check'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            
            echo "🏥 Running comprehensive health check..."
            echo ""
            
            echo "📋 Laravel Status:"
            php artisan --version
            echo ""
            
            echo "🗄️ Database Status:"
            php artisan migrate:status | head -10
            echo ""
            
            echo "👥 User Counts:"
            php artisan tinker --execute="
            echo 'Total Users: ' . App\Models\User::count() . PHP_EOL;
            echo 'Active Users: ' . App\Models\User::whereNotNull('email_verified_at')->count() . PHP_EOL;
            echo 'Roles: ' . Spatie\Permission\Models\Role::count() . PHP_EOL;
            "
            echo ""
            
            echo "💾 Storage Status:"
            df -h /home/u454362045/
            echo ""
            
            echo "📁 File Permissions:"
            ls -la storage/ | head -5
            ls -la bootstrap/cache/ | head -5
            echo ""
            
            echo "🌐 Website Response:"
            curl -I https://dokterkuklinik.com/login
            echo ""
            
            echo "🔧 Configuration:"
            php artisan config:show app | grep -E "(name|env|debug|url)"
            echo ""
            
            echo "✅ Health check completed"

      - name: Optimize Production
        if: github.event.inputs.action == 'optimize-production'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/u454362045/domains/dokterkuklinik.com/public_html
            
            echo "⚡ Optimizing for production..."
            
            # Ensure production settings
            sed -i 's/APP_DEBUG=true/APP_DEBUG=false/g' .env
            sed -i 's/APP_ENV=local/APP_ENV=production/g' .env
            sed -i 's/LOG_LEVEL=debug/LOG_LEVEL=error/g' .env
            
            # Clear and rebuild caches
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache || echo "⚠️ View cache skipped"
            
            # Optimize Composer
            composer dump-autoload --optimize --classmap-authoritative
            
            # Set optimal permissions
            chmod -R 755 storage bootstrap/cache
            chmod 644 .env
            
            # Clear old logs
            find storage/logs -name "*.log" -mtime +7 -delete 2>/dev/null || true
            
            echo "✅ Production optimization completed"