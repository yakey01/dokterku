name: Server Maintenance
on:
  workflow_dispatch:
    inputs:
      maintenance_type:
        description: 'Type of maintenance'
        required: true
        default: 'general'
        type: choice
        options:
        - general
        - pail-fix
        - cache-clear
        - permission-fix
        - database-fix
        - backup

jobs:
  maintenance:
    runs-on: ubuntu-latest
    steps:
      - name: Run Maintenance
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd domains/dokterkuklinik.com/public_html
            
            echo "🔧 Starting maintenance: ${{ github.event.inputs.maintenance_type }}"
            
            case "${{ github.event.inputs.maintenance_type }}" in
              "general")
                echo "🧹 General maintenance..."
                php artisan config:clear
                php artisan cache:clear
                php artisan route:clear
                php artisan view:clear
                composer dump-autoload
                ;;
              "pail-fix")
                echo "🔧 Pail maintenance..."
                if [ -f "fix-pail.sh" ]; then
                  chmod +x fix-pail.sh
                  ./fix-pail.sh
                else
                  composer require --dev laravel/pail
                  php artisan optimize:clear
                fi
                ;;
              "cache-clear")
                echo "🗑️ Cache clearing..."
                php artisan optimize:clear
                rm -rf storage/framework/cache/*
                rm -rf storage/framework/views/*
                ;;
              "permission-fix")
                echo "🔐 Permission fixing..."
                chmod -R 755 storage bootstrap/cache
                chown -R www-data:www-data storage bootstrap/cache
                ;;
              "database-fix")
                echo "🗄️ Database fixing..."
                if [ -f "fix-database.sh" ]; then
                  chmod +x fix-database.sh
                  ./fix-database.sh
                else
                  echo "Creating database fix script..."
                  # Create database directory and file
                  mkdir -p database
                  touch database/database.sqlite
                  chmod 664 database/database.sqlite
                  
                  # Update .env
                  sed -i '/DB_CONNECTION=/d' .env
                  sed -i '/DB_DATABASE=/d' .env
                  echo "DB_CONNECTION=sqlite" >> .env
                  echo "DB_DATABASE=$(pwd)/database/database.sqlite" >> .env
                  
                  # Clear cache and run migrations
                  php artisan config:clear
                  php artisan migrate --force
                fi
                ;;
              "backup")
                echo "💾 Creating backup..."
                tar -czf backup-$(date +%Y%m%d-%H%M%S).tar.gz \
                  --exclude=vendor \
                  --exclude=node_modules \
                  --exclude=.git \
                  .
                ;;
            esac
            
            echo "✅ Maintenance completed!" 