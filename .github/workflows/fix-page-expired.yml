name: Fix Page Expired Error

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for fixing page expired error'
        required: false
        default: 'Fix CSRF token and session issues on dokter edit page'

jobs:
  fix-page-expired:
    runs-on: ubuntu-latest
    
    steps:
    - name: Fix Page Expired Error on Production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 22
        timeout: 300s
        script: |
          echo "🔧 Fixing 'This page has expired' error..."
          echo "📍 Target: https://dokterkuklinik.com/admin/dokters/2/edit"
          
          cd /home/u546523095/domains/dokterkuklinik.com/public_html
          
          echo "✅ Connected to production server"
          
          # Check Laravel installation
          if [ -f "artisan" ]; then
              echo "✅ Laravel found"
          else
              echo "❌ Laravel not found - checking subdirectories..."
              find . -name "artisan" -type f 2>/dev/null | head -3
              exit 1
          fi
          
          echo ""
          echo "🔍 Checking current session configuration..."
          
          # Display current session settings
          echo "Current .env session settings:"
          grep -E "SESSION_|APP_KEY|CSRF_" .env || echo "No session settings found"
          
          echo ""
          echo "🔄 Clearing all Laravel caches..."
          
          # Clear all caches thoroughly
          php artisan config:clear
          php artisan cache:clear  
          php artisan view:clear
          php artisan route:clear
          
          # Clear compiled views
          rm -rf storage/framework/views/*.php 2>/dev/null || echo "No compiled views to clear"
          
          # Clear session files
          if [ -d "storage/framework/sessions" ]; then
              echo "Clearing session files..."
              find storage/framework/sessions/ -name 'laravel_session*' -mtime +1 -delete 2>/dev/null || echo "No old sessions to clear"
              echo "Remaining session files: $(find storage/framework/sessions/ -name 'laravel_session*' 2>/dev/null | wc -l)"
          fi
          
          echo ""
          echo "🔧 Setting proper storage permissions..."
          
          # Ensure proper permissions
          chmod -R 755 storage/
          chmod -R 755 bootstrap/cache/
          
          # Set specific permissions for session directory
          if [ -d "storage/framework/sessions" ]; then
              chmod 755 storage/framework/sessions/
          fi
          
          echo ""
          echo "🔑 Checking APP_KEY..."
          
          # Ensure APP_KEY exists
          if ! grep -q "APP_KEY=base64:" .env; then
              echo "Generating new APP_KEY..."
              php artisan key:generate --force
          else
              echo "✅ APP_KEY is properly set"
          fi
          
          echo ""
          echo "⚙️ Updating session configuration..."
          
          # Update session configuration in .env
          sed -i 's/SESSION_DRIVER=.*/SESSION_DRIVER=file/' .env 2>/dev/null || echo "SESSION_DRIVER already set or not found"
          sed -i 's/SESSION_LIFETIME=.*/SESSION_LIFETIME=120/' .env 2>/dev/null || echo "SESSION_LIFETIME already set or not found"
          
          # Add session settings if they don't exist
          if ! grep -q "SESSION_SECURE_COOKIE" .env; then
              echo "SESSION_SECURE_COOKIE=true" >> .env
          fi
          
          if ! grep -q "SESSION_SAME_SITE" .env; then
              echo "SESSION_SAME_SITE=strict" >> .env
          fi
          
          echo ""
          echo "🔄 Rebuilding configuration cache..."
          
          # Rebuild config cache
          php artisan config:cache
          
          echo ""
          echo "🌐 Testing artisan commands..."
          
          # Test basic artisan functionality
          php artisan --version
          
          echo ""
          echo "🚀 Running final optimization..."
          
          # Final optimization
          php artisan optimize
          
          echo ""
          echo "✅ Page expired fix completed successfully!"
          echo "📍 Please test: https://dokterkuklinik.com/admin/dokters/2/edit"
          echo ""
          echo "🔍 Final configuration check:"
          echo "Session settings:"
          grep -E "SESSION_|APP_KEY" .env | head -5
          
          echo ""
          echo "📊 Storage status:"
          ls -la storage/framework/ | head -5
          
    - name: Notify Fix Completion
      run: |
        echo "✅ Page expired error fix deployment completed"
        echo "🌐 Target URL: https://dokterkuklinik.com/admin/dokters/2/edit"
        echo "⚡ Changes applied:"
        echo "  - Cleared all Laravel caches"
        echo "  - Reset session configuration"
        echo "  - Updated storage permissions"
        echo "  - Regenerated configuration cache"
        echo ""
        echo "💡 If issue persists:"
        echo "  - Clear browser cache"
        echo "  - Try incognito/private browsing"
        echo "  - Check if user session is still valid"