name: 🔧 Manual Fix

on:
  workflow_dispatch:
    inputs:
      fix_type:
        description: 'Type of fix to apply'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - date-queries
          - validation-status
          - test-fixes

jobs:
  manual-fix:
    name: 🔧 Apply Manual Fixes
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          tools: composer:v2

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Apply targeted fixes
        id: fix
        run: |
          echo "🔧 Applying manual fixes for: ${{ github.event.inputs.fix_type }}"
          
          CHANGES_MADE=false
          
          # Fix date queries
          if [ "${{ github.event.inputs.fix_type }}" = "all" ] || [ "${{ github.event.inputs.fix_type }}" = "date-queries" ]; then
            echo "🔧 Fixing date query formats..."
            
            # Find files with problematic date queries
            if find app/ -name "*.php" -exec grep -l "whereDate.*format.*Y-m-d" {} \; 2>/dev/null; then
              find app/ -name "*.php" -exec sed -i.bak -E "s/whereDate\('([^']+)', \\$([^)]+)->format\('Y-m-d'\)\)/whereDate('\1', \$\2)/g" {} \;
              find app/ -name "*.php.bak" -delete 2>/dev/null || true
              CHANGES_MADE=true
              echo "  ✅ Date queries fixed"
            fi
          fi
          
          # Fix validation status
          if [ "${{ github.event.inputs.fix_type }}" = "all" ] || [ "${{ github.event.inputs.fix_type }}" = "validation-status" ]; then
            echo "🔧 Fixing validation status mapping..."
            
            if find app/ -name "*.php" -exec grep -l "'approved'" {} \; 2>/dev/null; then
              find app/ -name "*.php" -exec sed -i.bak "s/'approved'/'disetujui'/g" {} \;
              find app/ -name "*.php.bak" -delete 2>/dev/null || true
              CHANGES_MADE=true
              echo "  ✅ Validation status fixed"
            fi
          fi
          
          # Fix test files
          if [ "${{ github.event.inputs.fix_type }}" = "all" ] || [ "${{ github.event.inputs.fix_type }}" = "test-fixes" ]; then
            echo "🧪 Fixing test files..."
            
            if find tests/ -name "*.php" -exec grep -l "'approved'" {} \; 2>/dev/null; then
              find tests/ -name "*.php" -exec sed -i.bak "s/'approved'/'disetujui'/g" {} \;
              find tests/ -name "*.php.bak" -delete 2>/dev/null || true
              CHANGES_MADE=true
              echo "  ✅ Test files fixed"
            fi
          fi
          
          echo "changes_made=$CHANGES_MADE" >> $GITHUB_OUTPUT

      - name: Test fixes
        if: steps.fix.outputs.changes_made == 'true'
        run: |
          echo "🧪 Testing applied fixes..."
          if php artisan test; then
            echo "✅ All tests passing!"
            echo "test_success=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Some tests still failing"
            echo "test_success=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Commit fixes
        if: steps.fix.outputs.changes_made == 'true'
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "Manual Fix Action"
          
          # Check for changes
          if ! git diff --quiet; then
            git add .
            git commit -m "🔧 Manual fix: ${{ github.event.inputs.fix_type }}

Applied manual fixes for: ${{ github.event.inputs.fix_type }}

Changes applied:
- Fixed date query formats (whereDate optimization)
- Fixed validation status mapping (approved → disetujui)  
- Updated test assertions to match logic

🧪 Test Results: ${{ steps.fix.outputs.test_success == 'true' && 'All tests passing' || 'Some tests may need attention' }}

🔧 Triggered via Manual Fix workflow"
            
            git push origin main
            echo "✅ Changes committed and pushed"
          else
            echo "📝 No changes to commit"
          fi

      - name: Summary
        if: always()
        run: |
          echo "🔧 Manual Fix Summary"
          echo "===================="
          echo "Fix type: ${{ github.event.inputs.fix_type }}"
          echo "Changes made: ${{ steps.fix.outputs.changes_made }}"
          echo "Tests passing: ${{ steps.fix.outputs.test_success }}"
          echo ""
          if [ "${{ steps.fix.outputs.changes_made }}" = "true" ]; then
            echo "✅ Manual fixes applied and committed to main branch"
          else
            echo "📝 No fixes were needed"
          fi