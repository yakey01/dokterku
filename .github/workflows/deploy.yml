name: Deploy Dokterku to Hostinger

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🚀 Checkout code
        uses: actions/checkout@v4
        
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
          
      - name: 📦 Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader --no-scripts
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Install NPM dependencies
        run: npm ci --omit=dev
        
      - name: 🏗️ Build production assets
        run: npm run build
        
      - name: 🧹 Cleanup development files
        run: |
          rm -rf node_modules
          rm -rf .git
          rm -rf tests
          rm -f .env
          rm -f .env.example
          rm -f package-lock.json
          rm -f composer.lock
          
      - name: 🚀 Deploy to Hostinger
        uses: easingthemes/ssh-deploy@v4.1.8
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          SOURCE: "."
          TARGET: "/domains/dokterkuklinik.com/public_html"
          EXCLUDE: "/node_modules/, /.git/, /tests/, /.env, /storage/logs/"
          SCRIPT_BEFORE: |
            # Backup database sebelum deploy
            echo "🗄️ Creating database backup..."
            mysqldump -u ${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }} ${{ secrets.DB_DATABASE }} > ~/backup_$(date +%Y%m%d_%H%M%S).sql || true
            
            # Hapus file lama kecuali .well-known
            echo "🗑️ Cleaning up old files..."
            cd /domains/dokterkuklinik.com/public_html
            find . -mindepth 1 -name '.well-known' -prune -o -name 'cgi-bin' -prune -o -type f -delete
            find . -mindepth 1 -name '.well-known' -prune -o -name 'cgi-bin' -prune -o -type d -empty -delete
            
      - name: 🔧 Configure production environment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /domains/dokterkuklinik.com/public_html
            
            echo "🔧 Setting up production environment..."
            
            # Setup .env file
            cp .env.production .env
            
            # Generate application key
            php artisan key:generate --force
            
            # Set proper permissions
            chmod -R 755 storage bootstrap/cache
            chmod 644 .env
            
            # Run database migrations
            echo "🗄️ Running database migrations..."
            php artisan migrate --force
            
            # Create storage symlink
            php artisan storage:link
            
            # Cache optimization
            echo "⚡ Optimizing for production..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan event:cache
            
            # Final permissions check
            chmod -R 755 storage bootstrap/cache
            
            echo "✅ Deployment completed successfully!"
            
      - name: 🧪 Test deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /domains/dokterkuklinik.com/public_html
            
            echo "🧪 Testing deployment..."
            
            # Test PHP syntax
            php -l public/index.php
            
            # Test database connection
            php artisan tinker --execute="echo 'Database: ' . (DB::connection()->getPdo() ? 'Connected' : 'Failed');"
            
            # Test basic Laravel functionality
            php artisan about --only=environment
            
            echo "🎉 All tests passed!"
            
      - name: 📊 Deployment Summary
        run: |
          echo "🎉 Deployment Summary"
          echo "==================="
          echo "✅ Repository: ${{ github.repository }}"
          echo "✅ Branch: ${{ github.ref_name }}"
          echo "✅ Commit: ${{ github.sha }}"
          echo "✅ Deployed to: https://dokterkuklinik.com"
          echo "✅ Admin Panel: https://dokterkuklinik.com/admin"
          echo "✅ Time: $(date)"
          echo "==================="