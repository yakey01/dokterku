name: Deploy Dokterku to Hostinger (Fixed)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🚀 Checkout code
        uses: actions/checkout@v4
        
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
          
      - name: 📦 Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader --no-scripts
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Install NPM dependencies
        run: npm ci
        
      - name: 🏗️ Build production assets
        run: npm run build
        
      - name: 📁 Prepare deployment package
        run: |
          echo "🧹 Cleaning up development files..."
          rm -rf node_modules
          rm -rf .git
          rm -rf tests
          rm -f .env
          rm -f .env.example
          rm -f package-lock.json
          
          echo "📦 Creating deployment archive..."
          tar -czf ../deployment.tar.gz .
          mv ../deployment.tar.gz .
          
      - name: 🚀 Deploy to Hostinger
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "🚀 Starting deployment to Hostinger..."
            
            # Backup database
            echo "🗄️ Creating database backup..."
            mysqldump -u ${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }} ${{ secrets.DB_DATABASE }} > ~/backup_$(date +%Y%m%d_%H%M%S).sql || true
            
            # Clean up old files
            echo "🗑️ Cleaning up old files..."
            cd ~/public_html
            find . -mindepth 1 -name '.well-known' -prune -o -name 'cgi-bin' -prune -o -type f -delete
            find . -mindepth 1 -name '.well-known' -prune -o -name 'cgi-bin' -prune -o -type d -empty -delete
            
            echo "✅ Cleanup completed"
            
      - name: 📤 Upload files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deployment.tar.gz"
          target: "~/"
            
      - name: 🔧 Extract and configure
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "📦 Extracting deployment package..."
            cd ~
            tar -xzf deployment.tar.gz -C public_html/
            rm deployment.tar.gz
            
            cd ~/public_html
            
            echo "🔧 Setting up production environment..."
            
            # Copy production env
            if [ -f ".env.production" ]; then
                cp .env.production .env
                echo "✅ Production environment configured"
            else
                echo "❌ .env.production not found"
            fi
            
            # Generate application key
            echo "🔑 Generating application key..."
            php artisan key:generate --force
            
            # Set proper permissions
            echo "🔐 Setting file permissions..."
            find . -type d -exec chmod 755 {} \;
            find . -type f -exec chmod 644 {} \;
            chmod -R 775 storage bootstrap/cache
            chmod 644 .env
            
            # Move Laravel public files to document root
            if [ -d "public" ] && [ ! -f "index.php" ]; then
                echo "📁 Moving Laravel public files to document root..."
                cp -r public/* .
                # Update index.php paths
                sed -i 's|__DIR__\.\.\/\.\./vendor/autoload\.php|__DIR__\.\.\/vendor/autoload\.php|g' index.php
                sed -i 's|__DIR__\.\.\/\.\./bootstrap/app\.php|__DIR__\.\.\/bootstrap/app\.php|g' index.php
                echo "✅ Laravel public files moved to document root"
            fi
            
            # Create .htaccess if not exists
            if [ ! -f ".htaccess" ]; then
                echo "📝 Creating .htaccess file..."
                cat > .htaccess << 'EOF'
<IfModule mod_rewrite.c>
    <IfModule mod_negotiation.c>
        Options -MultiViews -Indexes
    </IfModule>

    RewriteEngine On

    # Handle Authorization Header
    RewriteCond %{HTTP:Authorization} .
    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

    # Redirect Trailing Slashes If Not A Folder...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]

    # Send Requests To Front Controller...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ index.php [L]
</IfModule>
EOF
                echo "✅ .htaccess file created"
            fi
            
            # Test if Laravel is working
            echo "🧪 Testing Laravel installation..."
            if [ -f "artisan" ]; then
                echo "✅ Laravel artisan found"
                
                # Run database migrations
                echo "🗄️ Running database migrations..."
                php artisan migrate --force
                
                # Create storage symlink
                echo "🔗 Creating storage symlink..."
                php artisan storage:link
                
                # Cache optimization
                echo "⚡ Optimizing for production..."
                php artisan config:cache
                php artisan route:cache
                php artisan view:cache
                php artisan event:cache
                
                # Final permissions check
                chmod -R 755 storage bootstrap/cache
                
                echo "✅ Laravel setup completed successfully!"
            else
                echo "❌ Laravel artisan not found - deployment may have failed"
                echo "📁 Current directory contents:"
                ls -la
            fi
            
            echo "🎉 Deployment completed!"
            
      - name: 🧪 Test deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/public_html
            
            echo "🧪 Testing deployment..."
            
            # Test directory structure
            echo "📁 Directory structure:"
            ls -la
            
            # Test PHP syntax
            if [ -f "index.php" ]; then
                echo "✅ index.php found"
                php -l index.php
            else
                echo "❌ index.php not found"
            fi
            
            # Test artisan
            if [ -f "artisan" ]; then
                echo "✅ artisan found"
                php artisan about --only=environment
            else
                echo "❌ artisan not found"
            fi
            
            echo "🎉 All tests completed!"
            
      - name: 📊 Deployment Summary
        run: |
          echo "🎉 Deployment Summary"
          echo "==================="
          echo "✅ Repository: ${{ github.repository }}"
          echo "✅ Branch: ${{ github.ref_name }}"
          echo "✅ Commit: ${{ github.sha }}"
          echo "✅ Deployed to: https://dokterkuklinik.com"
          echo "✅ Admin Panel: https://dokterkuklinik.com/admin"
          echo "✅ Time: $(date)"
          echo "==================="
