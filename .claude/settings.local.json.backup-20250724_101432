{
  "permissions": {
    "allow": [
      "Bash(gh:*)",
      "Bash(brew install:*)",
      "WebFetch(domain:github.com)",
      "Bash(ls:*)",
      "Bash(curl:*)",
      "Bash(unzip:*)",
      "Bash(sudo cp:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(export:*)",
      "Bash(composer show:*)",
      "Bash(npm:*)",
      "Bash(php artisan:*)",
      "Bash(composer update:*)",
      "Bash(./vendor/bin/pest:*)",
      "Bash(composer diagnose:*)",
      "Bash(composer check-platform-reqs:*)",
      "Bash(composer outdated:*)",
      "Bash(grep:*)",
      "Bash(rm:*)",
      "Bash(pkill:*)",
      "Bash(node:*)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(composer:*)",
      "Bash(php:*)",
      "Bash(sqlite3:*)",
      "Bash(git clone:*)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(./vendor/bin/pint:*)",
      "Bash(rg:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(open /Users/kym/Herd/Dokterku/clock-debug.html)",
      "Bash(timeout:*)",
      "Bash(sed:*)",
      "Bash(wget:*)",
      "WebFetch(domain:jsfiddle.net)",
      "WebFetch(domain:gist.github.com)",
      "WebFetch(domain:madhuranjanui.com)",
      "WebFetch(domain:docs.maptiler.com)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)",
      "Bash(git pull:*)",
      "WebFetch(domain:openjavascript.info)",
      "WebFetch(domain:leafletjs.com)",
      "Bash(for file in app/Providers/Filament/ParamedisPanelProvider.php app/Providers/Filament/ManajerPanelProvider.php app/Providers/Filament/DokterPanelProvider.php)",
      "Bash(do)",
      "Bash(done)",
      "Bash(chmod:*)",
      "Bash(./test_real_login.sh:*)",
      "WebFetch(domain:filamentphp.com)",
      "Bash(truncate:*)",
      "Bash(echo)",
      "Bash(find /Users/kym/Herd/Dokterku/app/Filament/Dokter -name \"*presensi*\" -o -name \"*attendance*\" -type f)",
      "Bash(true)",
      "Bash(-b session_real.txt )",
      "Bash(-w \"HTTP Status: %{http_code}\\n\" )",
      "Bash(-o presensi_page.html)",
      "Bash(-b petugas_auth.txt )",
      "Bash(-o petugas_jumlah_pasien.html)",
      "Bash(-o petugas_create.html)",
      "Bash(kill:*)",
      "WebFetch(domain:127.0.0.1)",
      "Bash(git checkout:*)",
      "Bash(ngrok:*)",
      "Bash(git branch:*)",
      "Bash(ping:*)",
      "Bash(herd status:*)",
      "Bash(basename:*)",
      "Bash(source ~/.bashrc)",
      "Bash(echo $PATH)",
      "Bash(source:*)",
      "Bash(time curl:*)",
      "Bash(# Test 7: Invalid token access\necho \"\"=== Testing Invalid Token Access ===\"\"\ncurl -X GET http://127.0.0.1:8000/api/v2/dashboards/nonparamedis \\\n  -H \"\"Authorization: Bearer invalid-token-123\"\" \\\n  -H \"\"Accept: application/json\"\" \\\n  -s | jq ''.'')",
      "Bash(# Test 8: No token access\necho \"\"=== Testing No Token Access ===\"\"\ncurl -X GET http://127.0.0.1:8000/api/v2/dashboards/nonparamedis \\\n  -H \"\"Accept: application/json\"\" \\\n  -s | jq ''.'')",
      "Bash(# Test 9: Rate limiting test (multiple rapid requests)\nTOKEN=\"\"19|uriKlU5oy11nibIL9eSoiJStxg9EVY7GIQGkl4Fhb3e3c3e5\"\"\n\necho \"\"=== Testing Rate Limiting (Multiple Rapid Requests) ===\"\"\nfor i in {1..5}; do\n  echo \"\"Request $i:\"\"\n  curl -X GET http://127.0.0.1:8000/api/v2/dashboards/nonparamedis/attendance/status \\\n    -H \"\"Authorization: Bearer $TOKEN\"\" \\\n    -H \"\"Accept: application/json\"\" \\\n    -s | jq -r ''.status // .message'' \n  sleep 0.1\ndone)",
      "Bash(# Test 10: Work locations endpoint (public)\necho \"\"=== Testing Work Locations Endpoint ===\"\"\ncurl -X GET http://127.0.0.1:8000/api/v2/locations/work-locations \\\n  -H \"\"Accept: application/json\"\" \\\n  -s | jq ''.'')",
      "Bash(# Test 11: Multiple work locations GPS validation\necho \"\"=== Testing GPS Distance Calculation ===\"\"\n\n# Test coordinates near the work location (should be valid)\necho \"\"Valid location test (near clinic):\"\"\nLAT1=\"\"-7.898878\"\"\nLON1=\"\"111.961884\"\"\nLAT2=\"\"-7.898878\"\"  # Clinic coordinates\nLON2=\"\"111.961884\"\"\n\n# Calculate distance using Haversine formula\nphp -r \"\"\n\\$lat1 = $LAT1;\n\\$lon1 = $LON1;\n\\$lat2 = $LAT2;\n\\$lon2 = $LON2;\n\n\\$earthRadius = 6371000; // meters\n\\$dLat = deg2rad(\\$lat2 - \\$lat1);\n\\$dLon = deg2rad(\\$lon2 - \\$lon1);\n\n\\$a = sin(\\$dLat/2) * sin(\\$dLat/2) +\n     cos(deg2rad(\\$lat1)) * cos(deg2rad(\\$lat2)) *\n     sin(\\$dLon/2) * sin(\\$dLon/2);\n     \n\\$c = 2 * atan2(sqrt(\\$a), sqrt(1-\\$a));\n\\$distance = \\$earthRadius * \\$c;\n\necho ''Distance: '' . round(\\$distance, 2) . '' meters\\n'';\necho ''Valid (< 100m): '' . (\\$distance < 100 ? ''YES'' : ''NO'') . ''\\n'';\n\"\"\n\necho \"\"\"\"\necho \"\"Invalid location test (1km away):\"\"\nLAT1=\"\"-7.908878\"\"  # 1km north\nLON1=\"\"111.971884\"\"  # 1km east\n\nphp -r \"\"\n\\$lat1 = $LAT1;\n\\$lon1 = $LON1;\n\\$lat2 = -7.898878;\n\\$lon2 = 111.961884;\n\n\\$earthRadius = 6371000; // meters\n\\$dLat = deg2rad(\\$lat2 - \\$lat1);\n\\$dLon = deg2rad(\\$lon2 - \\$lon1);\n\n\\$a = sin(\\$dLat/2) * sin(\\$dLat/2) +\n     cos(deg2rad(\\$lat1)) * cos(deg2rad(\\$lat2)) *\n     sin(\\$dLon/2) * sin(\\$dLon/2);\n     \n\\$c = 2 * atan2(sqrt(\\$a), sqrt(1-\\$a));\n\\$distance = \\$earthRadius * \\$c;\n\necho ''Distance: '' . round(\\$distance, 2) . '' meters\\n'';\necho ''Valid (< 100m): '' . (\\$distance < 100 ? ''YES'' : ''NO'') . ''\\n'';\n\"\")",
      "Bash(./artisan route:list --name=api.v2.dashboards.nonparamedis)",
      "Bash(# Test 12: Test with different user roles\necho \"\"=== Testing Role-Based Access ===\"\"\n\n# Test with admin user\necho \"\"Testing with admin user:\"\"\ncurl -X POST http://127.0.0.1:8000/api/v2/auth/login \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -H \"\"Accept: application/json\"\" \\\n  -d ''{\n    \"\"login\"\": \"\"admin@dokterku.com\"\",\n    \"\"password\"\": \"\"password123\"\",\n    \"\"device_id\"\": \"\"admin-device-001\"\",\n    \"\"device_name\"\": \"\"Admin Test Device\"\"\n  }'' -s | jq -r ''.data.user.role // \"\"LOGIN FAILED\"\"'')",
      "Bash(# Update admin password and test\nphp artisan tinker --execute=\"\"\n\\$admin = App\\Models\\User::where(''email'', ''admin@dokterku.com'')->first();\nif (\\$admin) {\n    \\$admin->password = Hash::make(''password123'');\n    \\$admin->save();\n    echo ''Admin password updated'';\n} else {\n    echo ''Admin user not found'';\n}\n\"\")",
      "Bash(brew:*)",
      "Bash(# Test 13: Data validation scenarios\nTOKEN=\"\"19|uriKlU5oy11nibIL9eSoiJStxg9EVY7GIQGkl4Fhb3e3c3e5\"\"\n\necho \"\"=== Data Validation Testing ===\"\"\n\n# Test invalid GPS coordinates\necho \"\"1. Testing invalid latitude:\"\"\ncurl -X POST http://127.0.0.1:8000/api/v2/dashboards/nonparamedis/attendance/checkin \\\n  -H \"\"Authorization: Bearer $TOKEN\"\" \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -H \"\"Accept: application/json\"\" \\\n  -d ''{\n    \"\"latitude\"\": 91,\n    \"\"longitude\"\": 111.961884,\n    \"\"accuracy\"\": 5\n  }'' -s | jq -r ''.message''\n\necho \"\"2. Testing missing required fields:\"\"\ncurl -X POST http://127.0.0.1:8000/api/v2/dashboards/nonparamedis/attendance/checkin \\\n  -H \"\"Authorization: Bearer $TOKEN\"\" \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -H \"\"Accept: application/json\"\" \\\n  -d ''{}'' -s | jq -r ''.message // .errors''\n\necho \"\"3. Testing malformed JSON:\"\"\ncurl -X POST http://127.0.0.1:8000/api/v2/dashboards/nonparamedis/attendance/checkin \\\n  -H \"\"Authorization: Bearer $TOKEN\"\" \\\n  -H \"\"Content-Type: application/json\"\" \\\n  -H \"\"Accept: application/json\"\" \\\n  -d ''{\"\"latitude\"\": -7.898878, \"\"longitude\"\":}'' -s | jq -r ''.message'')",
      "WebFetch(domain:flowbite.com)",
      "WebFetch(domain:www.material-tailwind.com)",
      "WebFetch(domain:filamentexamples.com)",
      "WebFetch(domain:v2.filamentphp.com)",
      "Bash(awk:*)",
      "Bash(sudo npm install -g @anthropic-ai/claude-code)",
      "Bash(# Function to add getRedirectUrl to a file\nadd_redirect_url() {\n    local file=\"\"$1\"\"\n    local backup_file=\"\"${file}.backup\"\"\n    \n    # Create backup\n    cp \"\"$file\"\" \"\"$backup_file\"\"\n    \n    # Check if file already has getRedirectUrl\n    if grep -q \"\"getRedirectUrl\"\" \"\"$file\"\"; then\n        echo \"\"  -> Already has getRedirectUrl\"\"\n        rm \"\"$backup_file\"\"\n        return\n    fi\n    \n    # For Create pages\n    if [[ \"\"$file\"\" == *\"\"Create\"\"* ]]; then\n        # Add before the last }\n        sed -i '''' ''/^}$/i\\\n    \\\n    protected function getRedirectUrl(): string\\\n    {\\\n        return $this->getResource()::getUrl(''\\''''index''\\'''');\\\n    }'' \"\"$file\"\"\n    else\n        # For Edit pages - find the last function and add after it\n        # Add before the last }\n        sed -i '''' ''/^}$/i\\\n    \\\n    protected function getRedirectUrl(): string\\\n    {\\\n        return $this->getResource()::getUrl(''\\''''index''\\'''');\\\n    }'' \"\"$file\"\"\n    fi\n    \n    # Verify the change worked\n    if grep -q \"\"getRedirectUrl\"\" \"\"$file\"\"; then\n        echo \"\"  -> Successfully added getRedirectUrl\"\"\n        rm \"\"$backup_file\"\"\n    else\n        echo \"\"  -> Failed to add getRedirectUrl, restoring backup\"\"\n        mv \"\"$backup_file\"\" \"\"$file\"\"\n    fi\n}\n\n# Process remaining Create pages\nfind app/Filament/Resources -name \"\"Create*.php\"\" | xargs grep -L \"\"getRedirectUrl\"\" | head -5 | while read file; do\n    echo \"\"Processing Create: $file\"\"\n    add_redirect_url \"\"$file\"\"\ndone)",
      "Bash(for:*)",
      "Bash(echo \"Processing: $file\")",
      "Bash(mysql:*)",
      "Bash(./database/migrations/backup_migrations.sh:*)",
      "WebFetch(domain:heroicons.com)",
      "WebFetch(domain:id.pinterest.com)",
      "Bash(do if [[ -f \"$file\" ]])",
      "Bash(then sed -i '' \"s/navigationGroup = ''Presensi''/navigationGroup = ''📍 PRESENSI''/g\" \"$file\")",
      "Bash(fi)",
      "Bash(then sed -i '' \"s/navigationGroup = ''System Administration''/navigationGroup = ''⚙️ SYSTEM ADMINISTRATION''/g\" \"$file\")",
      "Bash(git merge:*)",
      "Bash(git reset:*)",
      "WebFetch(domain:laravel-news.com)",
      "WebFetch(domain:nabilhassen.com)",
      "Bash(git stash:*)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:support.hostinger.com)",
      "WebFetch(domain:www.hostinger.com)",
      "WebFetch(domain:dev.to)",
      "Bash(tar:*)",
      "Bash(sudo mv:*)",
      "Bash(~/.local/bin/gh extension install github/gh-copilot)",
      "Bash(./manual-deploy.sh)",
      "Bash(./simple-upload.sh:*)",
      "Bash(./debug-server.sh:*)",
      "WebFetch(domain:blog.jpat.dev)",
      "Bash(kimi:*)",
      "Bash(test-kimi)",
      "Bash(exec zsh)",
      "Bash(unset:*)",
      "WebFetch(domain:platform.moonshot.ai)",
      "WebFetch(domain:garysvenson09.medium.com)",
      "WebFetch(domain:apidog.com)",
      "Bash(ssh:*)",
      "Bash(expect:*)",
      "Bash(git log:*)",
      "Bash(git rev-parse:*)",
      "Bash(./production_fix_inline.sh)",
      "Bash(./ssh-auto-fix.exp)",
      "Bash(./simple-ssh-fix.exp:*)",
      "Bash(./minimal-ssh.exp)",
      "Bash(./final-production-fix.exp)",
      "Bash(./super-simple-fix.exp)",
      "Bash(base64:*)",
      "Bash(./base64-fix.exp:*)",
      "Bash(./debug-run.exp)",
      "Bash(./filament-fix-run.exp:*)",
      "Bash(./final-run.exp)",
      "Bash(./auto-log-analysis.exp)",
      "Bash(./native-ssh-diagnosis.sh:*)",
      "Bash(./remote-500-analysis.sh:*)",
      "Bash(./fix-dashboard-500.sh:*)",
      "Bash(./quick-pegawai-fix.exp:*)",
      "Bash(./deep-pegawai-analysis.sh:*)",
      "Bash(./manual-deep-analysis.sh:*)",
      "Bash(./root-cause-fix.sh:*)",
      "Bash(./quick-deploy.sh)",
      "Bash(/Users/kym/ssh_connect.exp)",
      "Bash(/Users/kym/ssh_commands.exp)",
      "Bash(/Users/kym/update_production.exp)",
      "Bash(scp:*)",
      "Bash(/Users/kym/upload_files.exp:*)",
      "Bash(/Users/kym/update_routes.exp)",
      "Bash(/Users/kym/upload_patch.exp:*)",
      "Bash(/Users/kym/upload_paramedis.exp)",
      "Bash(/Users/kym/clear_cache.exp)",
      "Bash(/Users/kym/deploy_health_check.exp:*)",
      "Bash(/Users/kym/check_production_health.exp)",
      "Bash(/Users/kym/production_diagnostic.exp)",
      "Bash(/Users/kym/fix_production_web.exp)",
      "Bash(/Users/kym/final_production_fix.exp)",
      "Bash(/Users/kym/upload_to_web_dir.exp:*)",
      "Bash(/Users/kym/test_live_site.exp)",
      "WebFetch(domain:dokterkuklinik.com)",
      "Bash(/Users/kym/debug_500_error.exp)",
      "Bash(/Users/kym/fix_missing_middleware.exp)",
      "Bash(/Users/kym/test_final_fix.exp)",
      "Bash(/Users/kym/deep_analysis_comparison.exp)",
      "Bash(/Users/kym/check_specific_users.exp)",
      "Bash(/Users/kym/fix_user_mapping.exp)",
      "Bash(/Users/kym/Herd/Dokterku/fix-page-expired.sh:*)",
      "Bash(/Users/kym/create_login_test.exp:*)",
      "Bash(/Users/kym/test_real_login.exp)",
      "Bash(/Users/kym/deep_dive_monitoring.exp)",
      "Bash(/Users/kym/check_current_errors.exp)",
      "Bash(/Users/kym/fix_vite_manifest.exp)",
      "Bash(/Users/kym/fix_paramedis_view.exp)",
      "Bash(/Users/kym/find_vite_call.exp)",
      "Bash(/Users/kym/final_test_paramedis.exp)",
      "Bash(/Users/kym/fix_react_root.exp:*)",
      "Bash(/Users/kym/check_modern_dashboard.exp)",
      "Bash(/Users/kym/fix_react_element_id.exp:*)",
      "Bash(/Users/kym/check_dashboard_data.exp:*)",
      "Bash(/Users/kym/add_dashboard_data.exp:*)",
      "Bash(./quick-fix-hostinger.sh:*)",
      "Bash(./fix-admin-refresh-loop.sh:*)",
      "Bash(./install-sshpass-mac.sh:*)",
      "Bash(./fix-admin-refresh-expect.exp:*)",
      "Bash(./fix-csrf-419.exp:*)",
      "Bash(./create-simple-csrf-test.exp:*)",
      "Bash(./fix-test-routes.exp)",
      "Bash(./upload-to-hostinger.sh:*)",
      "Bash(./test-real-login.exp:*)",
      "Bash(do echo \"Fixing: $file\")",
      "Bash(SSHPASS='LaTahzan@01' scp -P 65002 -o StrictHostKeyChecking=no /Users/kym/Herd/Dokterku/app/Providers/Filament/AdminPanelProvider.php u454362045@153.92.8.132:dokterku/app/Providers/Filament/AdminPanelProvider.php)",
      "Bash(./hostinger-admin-sync-master.sh:*)",
      "Bash(./hostinger-admin-sync-controllers.sh:*)",
      "Bash(./hostinger-admin-sync-views.sh:*)",
      "Bash(./hostinger-admin-cache-clear.sh:*)",
      "Bash(BACKUP_DIR=\"backups/paramedis_localhost_backup_$(date +%Y%m%d_%H%M%S)\")",
      "Bash(echo:*)",
      "Bash(BACKUP_DIR=\"backups/paramedis_localhost_backup_20250721_214014\")",
      "Bash(DOWNLOAD_DIR=\"hostinger_paramedis_download_$(date +%Y%m%d_%H%M%S)\")",
      "Bash(__NEW_LINE__ mkdir -p \"$DOWNLOAD_DIR\")",
      "Bash(__NEW_LINE__ echo \"Created download directory: $DOWNLOAD_DIR\")",
      "Bash(# Update locale settings from Hostinger while keeping localhost database and URL settings\necho \"\"=== Updating Environment Configuration ===\"\" && \n# Keep our localhost settings but update locale and session lifetime to match Hostinger\nsed -i '''' ''s/APP_LOCALE=id/APP_LOCALE=en/'' .env && \nsed -i '''' ''s/APP_FALLBACK_LOCALE=en/APP_FALLBACK_LOCALE=en/'' .env && \nsed -i '''' ''s/APP_FAKER_LOCALE=id_ID/APP_FAKER_LOCALE=en_US/'' .env && \nsed -i '''' ''s/SESSION_LIFETIME=120/SESSION_LIFETIME=1440/'' .env && \necho \"\"✓ Updated locale settings and session lifetime to match Hostinger configuration\"\" && \necho \"\"✓ Preserved localhost database and URL settings\"\")",
      "Bash(# Compare composer dependencies\necho \"\"=== Comparing Composer Dependencies ===\"\" && \necho \"\"Localhost composer.json vs Hostinger composer.json:\"\" && \ndiff -u composer.json hostinger_composer.json | head -20 || echo \"\"No differences in composer.json\"\" && \necho && \necho \"\"=== Comparing NPM Dependencies ===\"\" && \necho \"\"Localhost package.json vs Hostinger package.json:\"\" && \ndiff -u package.json hostinger_package.json | head -20 || echo \"\"No differences in package.json\"\")",
      "Bash(# Install the missing Blade UI Kit dependency\ncomposer require blade-ui-kit/blade-heroicons:\"\"^2.6\"\" && \necho \"\"✓ Installed missing blade-ui-kit/blade-heroicons dependency\"\")",
      "Bash(# Fix the controller naming issue\nif [ -f \"\"app/Http/Controllers/Paramedis/DokterGigiDashboardController.php\"\" ]; then\n  # Check if the class name matches the filename\n  grep -q \"\"class ParamedisGigiDashboardController\"\" app/Http/Controllers/Paramedis/DokterGigiDashboardController.php && \n  echo \"\"Controller class name needs to be updated to match filename\"\" || \n  echo \"\"Controller class name matches filename - good\"\"\nfi)",
      "Bash(__NEW_LINE__ php artisan config:clear)",
      "Bash(__NEW_LINE__ echo \"✓ Config cache cleared\")",
      "Bash(__NEW_LINE__ echo \"✓ Route cache cleared\")",
      "Bash(__NEW_LINE__ echo \"✓ Application cache cleared\")",
      "Bash(__NEW_LINE__ echo \"✓ View cache cleared\")",
      "Bash(__NEW_LINE__ echo \"✓ Autoload files regenerated\")",
      "Bash(__NEW_LINE__ echo \"✓ Laravel optimized\")",
      "Bash(__NEW_LINE__ echo \"✓ Laravel optimized successfully\")",
      "Bash(# Skip view:cache and run other optimizations\nphp artisan config:cache && \necho \"\"✓ Config cached\"\" && \nphp artisan route:cache && \necho \"\"✓ Routes cached\"\")",
      "Bash(# Create completion summary\nSUMMARY_FILE=\"\"paramedis_reverse_sync_summary_$(date +%Y%m%d_%H%M%S).txt\"\"\ncat > \"\"$SUMMARY_FILE\"\" << ''EOF''\n=== PARAMEDIS DASHBOARD REVERSE SYNCHRONIZATION SUMMARY ===\nDate: $(date)\nDirection: Hostinger → Localhost\n\nPHASE 1: BACKUP LOCALHOST FILES ✓ COMPLETED\n- Created backup directory: backups/paramedis_localhost_backup_20250721_214014/\n- Backed up 22 localhost paramedis files including:\n  * app/Filament/Paramedis/ directory\n  * app/Http/Middleware/ParamedisMiddleware.php\n  * app/Providers/Filament/ParamedisPanelProvider.php\n  * Controllers and API controllers\n  * All view files (paramedis/, paramedic/, mobile/)\n  * JavaScript components and React files\n  * CSS and asset files\n\nPHASE 2: DOWNLOAD FROM HOSTINGER ✓ COMPLETED\n- Downloaded 29 files from Hostinger including:\n  * Filament/Paramedis panel configuration\n  * ParamedisMiddleware.php and ParamedisPanelProvider.php  \n  * Paramedis controllers and NonParamedis controllers\n  * Mobile view files and React components\n  * JavaScript files and modern dashboard components\n  * Filament paramedis view templates\n\nPHASE 3: REPLACE LOCALHOST FILES ✓ COMPLETED\n- Successfully replaced all localhost paramedis files with Hostinger versions\n- Updated file permissions and maintained directory structure\n- Fixed PSR-4 autoloading issue with DokterGigiDashboardController class name\n\nPHASE 4: ENVIRONMENT SYNCHRONIZATION ✓ COMPLETED  \n- Updated locale settings to match Hostinger:\n  * APP_LOCALE=en (was id)\n  * APP_FALLBACK_LOCALE=en\n  * APP_FAKER_LOCALE=en_US (was id_ID)\n  * SESSION_LIFETIME=1440 (was 120)\n- Preserved localhost database settings (SQLite)\n- Preserved localhost URL settings (http://localhost)\n\nPHASE 5: DEPENDENCY SYNCHRONIZATION ✓ COMPLETED\n- Installed missing blade-ui-kit/blade-heroicons package\n- Dependencies now match Hostinger configuration\n- Fixed composer autoload compatibility\n\nPHASE 6: CACHE CLEARING & OPTIMIZATION ✓ COMPLETED\n- Cleared configuration, route, application, and view caches\n- Regenerated optimized autoload files\n- Cached configuration and routes for performance\n- Fixed heroicon component issue in advanced-reports view\n\nFILES REPLACED:\n• app/Filament/Paramedis/ (complete directory)\n• app/Http/Middleware/ParamedisMiddleware.php\n• app/Providers/Filament/ParamedisPanelProvider.php  \n• app/Http/Controllers/Paramedis/DokterGigiDashboardController.php\n• app/Http/Controllers/Admin/NonParamedisManagementController.php\n• app/Http/Controllers/Admin/NonParamedisReportController.php\n• resources/views/paramedic/ (complete directory)\n• resources/views/mobile/ (complete directory) \n• resources/views/filament/paramedis/ (complete directory)\n• resources/js/paramedis-mobile-app.tsx\n• resources/js/paramedis/modern-dashboard.tsx\n• resources/js/components/paramedis/ (complete directory)\n\nVERIFICATION:\n✓ All files copied successfully with correct permissions\n✓ Environment configured for localhost while adopting Hostinger settings  \n✓ Dependencies synchronized and autoload regenerated\n✓ Laravel caches cleared and optimization completed\n✓ PSR-4 autoloading compliance restored\n\nRESULT: Localhost paramedis dashboard now matches Hostinger production version \nwhile maintaining local development environment settings.\nEOF\n\necho \"\"=== REVERSE SYNCHRONIZATION COMPLETED SUCCESSFULLY ===\"\" && \necho && \ncat \"\"$SUMMARY_FILE\"\" | sed \"\"s/\\$(date)/$(date)/\"\" && \necho && \necho \"\"Summary saved to: $SUMMARY_FILE\"\")",
      "Bash(# Clean up temporary files\nrm -rf hostinger_paramedis_download_20250721_214141/ && \nrm -f hostinger_env_backup.txt hostinger_composer.json hostinger_package.json && \necho \"\"✓ Cleaned up temporary download files\"\" && \necho && \necho \"\"=== FINAL STATUS VERIFICATION ===\"\" && \nls -la app/Filament/Paramedis/ && \necho && \nls -la resources/views/paramedic/ && \necho && \nls -la resources/js/components/paramedis/ | head -10)",
      "Bash(open http://127.0.0.1:8000/dokter/mobile-app)",
      "Bash(./fix-hostinger-production.sh:*)",
      "Bash(./check-hostinger-routes.sh:*)",
      "Bash(./update-hostinger-routes.sh:*)",
      "Bash(./test-hostinger-api.sh:*)",
      "Bash(./deep-dive-yaya-rindang.sh:*)",
      "Bash(./investigate-yaya-session.sh:*)",
      "Bash(./fix-yaya-authentication.sh:*)",
      "Bash(./final-verification.sh:*)",
      "Bash(./audit-kehadiran-dokter.sh:*)",
      "Bash(./audit-localhost-kehadiran.sh:*)",
      "Bash(./compare-checksums.sh:*)",
      "Bash(./sync-hostinger-files.sh:*)",
      "Bash(./manual-sync-files.sh:*)",
      "Bash(echo:*)",
      "Bash(md5:*)",
      "WebFetch(domain:dokterkuklinic.com)",
      "Bash(/Users/kym/Herd/Dokterku/debug-hostinger.sh)",
      "Bash(./cleanup-temp-files.sh:*)",
      "Bash(/Users/kym/Herd/Dokterku/check-hostinger-directories.sh)",
      "Bash(./docker/scripts/run-deployment-test.sh:*)",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd domains/dokterkuklinic.com && ls -la')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'find domains -name \"\"*.php\"\" -o -name \"\"public_html\"\" -o -name \"\"httpdocs\"\" | head -20')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'ls -la domains/dokterkuklinic.com/')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'find . -type d -name \"\"*dokter*\"\" -o -name \"\"*public*\"\" | head -10')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'ls -la ~/domains/')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'ls -la ~/domains/dokterkuklinik.com/')",
      "Bash(./manual-db-setup.sh:*)",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && grep -A 10 -B 10 \"\"DB_\"\" .env')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && grep -r \"\"SESSION_LIFETIME\"\" . | head -5')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && grep -A 10 -B 10 \"\"SESSION_\"\" .env')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && cat app/Http/Middleware/VerifyCsrfToken.php')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && find . -name \"\"*.php\"\" -type f -exec grep -l \"\"yaya\"\" {} \\; | head -10')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && cat test-mobile-app-data.php | head -20')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && php artisan migrate --force')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && php artisan migrate:status')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && php artisan migrate:rollback --step=1')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && php artisan migrate:rollback --step=1 --force')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && php artisan db:seed --force')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && grep -A 10 -B 5 \"\"SESSION_LIFETIME\"\" config/session.php')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && cp .env .env.backup.$(date +%Y%m%d_%H%M%S)')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && php artisan config:cache')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && php artisan migrate:fresh --force 2>&1 | head -20')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && php artisan migrate:install')",
      "Bash(SSHPASS='LaTahzan@01' sshpass -e ssh -o StrictHostKeyChecking=no -p 65002 u454362045@153.92.8.132 'cd ~/domains/dokterkuklinic.com/public_html && php artisan migrate --force 2>&1 | head -30')",
      "Bash(SSHPASS='LaTahzan@01' sshpass:*)",
      "Bash(BACKUP_DIR=\"/Users/kym/Herd/Dokterku/backups/validation_refactor_$(date +%Y%m%d_%H%M%S)\")",
      "Bash(BACKUP_DIR=\"/Users/kym/Herd/Dokterku/backups/validation_refactor_20250724_093014\")"
    ],
    "deny": []
  }
}