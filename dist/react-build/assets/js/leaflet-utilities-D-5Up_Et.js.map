{"version":3,"file":"leaflet-utilities-B9plS_NO.js","sources":["../../../../resources/js/utils/OptimizedResizeObserver.ts","../../../../resources/js/utils/CustomMarkerSystem.ts","../../../../resources/js/utils/AssetManager.ts","../../../../resources/js/leaflet-utilities.ts"],"sourcesContent":["/**\n * 🚀 World-Class Optimized ResizeObserver Implementation\n * \n * Features:\n * - Intelligent debouncing with requestAnimationFrame optimization\n * - Performance monitoring and analytics\n * - Automatic loop detection and mitigation\n * - Memory leak prevention\n * - Error recovery and resilience\n * - Real-time performance metrics\n */\n\ninterface ResizeObserverMetrics {\n    totalObservations: number;\n    loopErrors: number;\n    averageCallbackTime: number;\n    maxCallbackTime: number;\n    memoryUsage: number;\n    activeObservers: number;\n    performanceScore: number;\n}\n\ninterface OptimizedResizeObserverOptions {\n    debounceMs?: number;\n    maxFPS?: number;\n    enableMetrics?: boolean;\n    enableLoopDetection?: boolean;\n    performanceThreshold?: number;\n    enableConsoleSupression?: boolean;\n}\n\nclass OptimizedResizeObserver implements ResizeObserver {\n    private observer: ResizeObserver;\n    private callback: ResizeObserverCallback;\n    private isDestroyed: boolean = false;\n    private options: Required<OptimizedResizeObserverOptions>;\n    private metrics: ResizeObserverMetrics;\n    private rafId: number | null = null;\n    private pendingEntries: ResizeObserverEntry[] = [];\n    private lastCallTime: number = 0;\n    private callbackTimes: number[] = [];\n    private loopDetectionCount: number = 0;\n    private static globalMetrics: Map<string, ResizeObserverMetrics> = new Map();\n    private instanceId: string;\n\n    constructor(\n        callback: ResizeObserverCallback, \n        options: OptimizedResizeObserverOptions = {}\n    ) {\n        this.instanceId = `ro-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n        \n        this.options = {\n            debounceMs: options.debounceMs ?? 16, // ~60fps\n            maxFPS: options.maxFPS ?? 60,\n            enableMetrics: options.enableMetrics ?? true,\n            enableLoopDetection: options.enableLoopDetection ?? true,\n            performanceThreshold: options.performanceThreshold ?? 16.67, // 60fps threshold\n            enableConsoleSupression: options.enableConsoleSupression ?? true,\n        };\n\n        this.metrics = {\n            totalObservations: 0,\n            loopErrors: 0,\n            averageCallbackTime: 0,\n            maxCallbackTime: 0,\n            memoryUsage: 0,\n            activeObservers: 1,\n            performanceScore: 100\n        };\n\n        this.callback = this.createOptimizedCallback(callback);\n        this.observer = new window.ResizeObserver(this.callback);\n        \n        if (this.options.enableMetrics) {\n            OptimizedResizeObserver.globalMetrics.set(this.instanceId, this.metrics);\n        }\n\n        this.setupErrorSuppression();\n        this.startPerformanceMonitoring();\n    }\n\n    private createOptimizedCallback(originalCallback: ResizeObserverCallback): ResizeObserverCallback {\n        return (entries: ResizeObserverEntry[], observer: ResizeObserver) => {\n            if (this.isDestroyed) return;\n\n            const startTime = performance.now();\n\n            try {\n                // Loop detection\n                if (this.options.enableLoopDetection) {\n                    const timeSinceLastCall = startTime - this.lastCallTime;\n                    if (timeSinceLastCall < 1) {\n                        this.loopDetectionCount++;\n                        if (this.loopDetectionCount > 10) {\n                            this.metrics.loopErrors++;\n                            console.warn(`🔄 ResizeObserver loop detected (${this.loopDetectionCount} rapid calls) - applying throttling`);\n                            return; // Skip this call\n                        }\n                    } else {\n                        this.loopDetectionCount = 0; // Reset counter\n                    }\n                }\n\n                // Debounced execution with requestAnimationFrame\n                this.pendingEntries = entries;\n                \n                if (this.rafId !== null) {\n                    cancelAnimationFrame(this.rafId);\n                }\n\n                this.rafId = requestAnimationFrame(() => {\n                    this.executeSafeCallback(originalCallback, this.pendingEntries, observer, startTime);\n                });\n\n            } catch (error) {\n                console.error('OptimizedResizeObserver callback error:', error);\n            }\n\n            this.lastCallTime = startTime;\n        };\n    }\n\n    private executeSafeCallback(\n        originalCallback: ResizeObserverCallback,\n        entries: ResizeObserverEntry[],\n        observer: ResizeObserver,\n        startTime: number\n    ): void {\n        if (this.isDestroyed) return;\n\n        try {\n            originalCallback(entries, observer);\n            \n            if (this.options.enableMetrics) {\n                this.updateMetrics(startTime);\n            }\n        } catch (error) {\n            // Handle ResizeObserver loop errors gracefully\n            if (error instanceof Error && error.message.includes('ResizeObserver loop')) {\n                this.metrics.loopErrors++;\n                console.debug('🔄 ResizeObserver loop handled gracefully');\n            } else {\n                console.error('ResizeObserver callback execution error:', error);\n            }\n        }\n    }\n\n    private updateMetrics(startTime: number): void {\n        const callbackTime = performance.now() - startTime;\n        \n        this.metrics.totalObservations++;\n        this.metrics.maxCallbackTime = Math.max(this.metrics.maxCallbackTime, callbackTime);\n        \n        this.callbackTimes.push(callbackTime);\n        if (this.callbackTimes.length > 100) {\n            this.callbackTimes = this.callbackTimes.slice(-50); // Keep last 50 measurements\n        }\n        \n        this.metrics.averageCallbackTime = \n            this.callbackTimes.reduce((sum, time) => sum + time, 0) / this.callbackTimes.length;\n\n        // Performance score calculation (0-100)\n        const performanceRatio = Math.min(this.options.performanceThreshold / this.metrics.averageCallbackTime, 1);\n        const loopPenalty = Math.max(0, 1 - (this.metrics.loopErrors / this.metrics.totalObservations));\n        this.metrics.performanceScore = Math.round(performanceRatio * loopPenalty * 100);\n\n        // Update memory usage\n        if ('memory' in performance && (performance as any).memory) {\n            this.metrics.memoryUsage = (performance as any).memory.usedJSHeapSize;\n        }\n    }\n\n    private setupErrorSuppression(): void {\n        if (!this.options.enableConsoleSupression) return;\n\n        // Intelligent console error suppression\n        const originalError = console.error;\n        if (originalError._optimizedResizeObserverPatched) return;\n\n        console.error = function(...args: any[]) {\n            const message = args[0]?.toString?.() || '';\n            \n            if (message.includes('ResizeObserver loop') || \n                message.includes('ResizeObserver loop limit exceeded') ||\n                message.includes('ResizeObserver loop completed with undelivered notifications')) {\n                \n                // Only log the first few occurrences, then suppress\n                const errorCount = (globalThis as any)._resizeObserverErrorCount || 0;\n                if (errorCount < 3) {\n                    console.debug(`🔄 ResizeObserver loop ${errorCount + 1}/3 (suppressing future warnings for performance)`);\n                    (globalThis as any)._resizeObserverErrorCount = errorCount + 1;\n                }\n                return;\n            }\n            \n            originalError.apply(console, args);\n        };\n\n        (console.error as any)._optimizedResizeObserverPatched = true;\n    }\n\n    private startPerformanceMonitoring(): void {\n        if (!this.options.enableMetrics) return;\n\n        const monitorPerformance = () => {\n            if (this.isDestroyed) return;\n\n            // Update global metrics\n            OptimizedResizeObserver.globalMetrics.set(this.instanceId, { ...this.metrics });\n\n            // Schedule next monitoring\n            setTimeout(monitorPerformance, 5000); // Every 5 seconds\n        };\n\n        setTimeout(monitorPerformance, 5000);\n    }\n\n    // Standard ResizeObserver interface\n    observe(target: Element, options?: ResizeObserverOptions): void {\n        if (this.isDestroyed) return;\n        this.observer.observe(target, options);\n    }\n\n    unobserve(target: Element): void {\n        if (this.isDestroyed) return;\n        this.observer.unobserve(target);\n    }\n\n    disconnect(): void {\n        this.isDestroyed = true;\n        \n        if (this.rafId !== null) {\n            cancelAnimationFrame(this.rafId);\n            this.rafId = null;\n        }\n\n        this.observer.disconnect();\n        OptimizedResizeObserver.globalMetrics.delete(this.instanceId);\n    }\n\n    // Additional utility methods\n    getMetrics(): ResizeObserverMetrics {\n        return { ...this.metrics };\n    }\n\n    static getGlobalMetrics(): ResizeObserverMetrics {\n        const allMetrics = Array.from(this.globalMetrics.values());\n        if (allMetrics.length === 0) {\n            return {\n                totalObservations: 0,\n                loopErrors: 0,\n                averageCallbackTime: 0,\n                maxCallbackTime: 0,\n                memoryUsage: 0,\n                activeObservers: 0,\n                performanceScore: 100\n            };\n        }\n\n        return {\n            totalObservations: allMetrics.reduce((sum, m) => sum + m.totalObservations, 0),\n            loopErrors: allMetrics.reduce((sum, m) => sum + m.loopErrors, 0),\n            averageCallbackTime: allMetrics.reduce((sum, m) => sum + m.averageCallbackTime, 0) / allMetrics.length,\n            maxCallbackTime: Math.max(...allMetrics.map(m => m.maxCallbackTime)),\n            memoryUsage: Math.max(...allMetrics.map(m => m.memoryUsage)),\n            activeObservers: allMetrics.length,\n            performanceScore: Math.round(allMetrics.reduce((sum, m) => sum + m.performanceScore, 0) / allMetrics.length)\n        };\n    }\n\n    static observeChart(\n        element: Element,\n        callback: (dimensions: { width: number; height: number }) => void,\n        options?: OptimizedResizeObserverOptions\n    ): () => void {\n        const observer = new OptimizedResizeObserver((entries) => {\n            for (const entry of entries) {\n                const { width, height } = entry.contentRect;\n                callback({ width: Math.floor(width), height: Math.floor(height) });\n            }\n        }, options);\n        \n        observer.observe(element);\n        \n        // Return cleanup function\n        return () => {\n            observer.disconnect();\n        };\n    }\n\n    static createPerformanceDashboard(): HTMLElement {\n        const dashboard = document.createElement('div');\n        dashboard.className = 'resize-observer-dashboard';\n        dashboard.innerHTML = `\n            <div class=\"performance-dashboard\">\n                <h3>🚀 ResizeObserver Performance</h3>\n                <div class=\"metrics-grid\">\n                    <div class=\"metric\">\n                        <span class=\"label\">Active Observers:</span>\n                        <span class=\"value\" id=\"ro-active\">0</span>\n                    </div>\n                    <div class=\"metric\">\n                        <span class=\"label\">Performance Score:</span>\n                        <span class=\"value\" id=\"ro-score\">100</span>\n                    </div>\n                    <div class=\"metric\">\n                        <span class=\"label\">Loop Errors:</span>\n                        <span class=\"value\" id=\"ro-loops\">0</span>\n                    </div>\n                    <div class=\"metric\">\n                        <span class=\"label\">Avg Callback Time:</span>\n                        <span class=\"value\" id=\"ro-time\">0ms</span>\n                    </div>\n                </div>\n            </div>\n        `;\n\n        // Update dashboard periodically\n        const updateDashboard = () => {\n            const metrics = OptimizedResizeObserver.getGlobalMetrics();\n            const activeEl = dashboard.querySelector('#ro-active');\n            const scoreEl = dashboard.querySelector('#ro-score');\n            const loopsEl = dashboard.querySelector('#ro-loops');\n            const timeEl = dashboard.querySelector('#ro-time');\n\n            if (activeEl) activeEl.textContent = metrics.activeObservers.toString();\n            if (scoreEl) {\n                scoreEl.textContent = metrics.performanceScore.toString();\n                scoreEl.className = `value ${metrics.performanceScore > 80 ? 'good' : metrics.performanceScore > 60 ? 'warning' : 'error'}`;\n            }\n            if (loopsEl) loopsEl.textContent = metrics.loopErrors.toString();\n            if (timeEl) timeEl.textContent = `${metrics.averageCallbackTime.toFixed(2)}ms`;\n        };\n\n        updateDashboard();\n        setInterval(updateDashboard, 1000);\n\n        return dashboard;\n    }\n}\n\n// Global utility functions\nexport function createOptimizedResizeObserver(\n    callback: ResizeObserverCallback,\n    options?: OptimizedResizeObserverOptions\n): OptimizedResizeObserver {\n    return new OptimizedResizeObserver(callback, options);\n}\n\nexport function suppressResizeObserverErrors(): void {\n    const originalError = console.error;\n    if ((originalError as any)._resizeObserverPatched) return;\n\n    console.error = function(...args: any[]) {\n        const message = args[0]?.toString?.() || '';\n        if (message.includes('ResizeObserver loop')) {\n            console.debug('🔄 ResizeObserver loop suppressed');\n            return;\n        }\n        originalError.apply(console, args);\n    };\n\n    (console.error as any)._resizeObserverPatched = true;\n}\n\nexport function getResizeObserverMetrics(): ResizeObserverMetrics {\n    return OptimizedResizeObserver.getGlobalMetrics();\n}\n\n// Replace global ResizeObserver with optimized version\nexport function enableGlobalOptimization(options?: OptimizedResizeObserverOptions): void {\n    if ((window as any)._resizeObserverOptimized) return;\n\n    const OriginalResizeObserver = window.ResizeObserver;\n    window.ResizeObserver = class extends OptimizedResizeObserver {\n        constructor(callback: ResizeObserverCallback) {\n            super(callback, options);\n        }\n    } as any;\n\n    (window as any)._resizeObserverOptimized = true;\n    console.log('✅ Global ResizeObserver optimization enabled');\n}\n\n// Auto-enable optimization when imported\nif (typeof window !== 'undefined') {\n    suppressResizeObserverErrors();\n    enableGlobalOptimization();\n}\n\nexport default OptimizedResizeObserver;","/**\n * 🎨 World-Class Custom Marker System for Leaflet Maps\n * \n * Features:\n * - Beautiful custom SVG markers with gradients and shadows\n * - Location-specific icons (hospital, clinic, office, etc.)\n * - Pulsing animations for active markers\n * - Marker clustering for multiple locations\n * - Glassmorphism popup designs\n * - Theme-aware color schemes\n * - Responsive design patterns\n */\n\ninterface MarkerTheme {\n    primary: string;\n    secondary: string;\n    accent: string;\n    shadow: string;\n    glow: string;\n}\n\ninterface CustomMarkerOptions {\n    type?: 'hospital' | 'clinic' | 'office' | 'pharmacy' | 'lab' | 'emergency' | 'default';\n    theme?: 'medical' | 'corporate' | 'emergency' | 'eco' | 'luxury' | 'dark';\n    size?: 'small' | 'medium' | 'large' | 'xl';\n    animated?: boolean;\n    pulsing?: boolean;\n    glowing?: boolean;\n    shadowIntensity?: 'none' | 'light' | 'medium' | 'strong';\n    customIcon?: string;\n    className?: string;\n}\n\ninterface PopupOptions {\n    title?: string;\n    description?: string;\n    imageUrl?: string;\n    actions?: Array<{ label: string; action: () => void; style?: string }>;\n    theme?: 'glass' | 'modern' | 'minimal' | 'luxury';\n    maxWidth?: number;\n}\n\nclass CustomMarkerSystem {\n    private static themes: Map<string, MarkerTheme> = new Map([\n        ['medical', {\n            primary: '#e53e3e',\n            secondary: '#ffffff',\n            accent: '#3182ce',\n            shadow: 'rgba(229, 62, 62, 0.3)',\n            glow: 'rgba(229, 62, 62, 0.5)'\n        }],\n        ['corporate', {\n            primary: '#3182ce',\n            secondary: '#ffffff',\n            accent: '#38a169',\n            shadow: 'rgba(49, 130, 206, 0.3)',\n            glow: 'rgba(49, 130, 206, 0.5)'\n        }],\n        ['emergency', {\n            primary: '#e53e3e',\n            secondary: '#ffffff',\n            accent: '#f56565',\n            shadow: 'rgba(229, 62, 62, 0.4)',\n            glow: 'rgba(245, 101, 101, 0.6)'\n        }],\n        ['eco', {\n            primary: '#38a169',\n            secondary: '#ffffff',\n            accent: '#68d391',\n            shadow: 'rgba(56, 161, 105, 0.3)',\n            glow: 'rgba(56, 161, 105, 0.5)'\n        }],\n        ['luxury', {\n            primary: '#805ad5',\n            secondary: '#ffffff',\n            accent: '#d69e2e',\n            shadow: 'rgba(128, 90, 213, 0.3)',\n            glow: 'rgba(128, 90, 213, 0.5)'\n        }],\n        ['dark', {\n            primary: '#2d3748',\n            secondary: '#ffffff',\n            accent: '#4299e1',\n            shadow: 'rgba(45, 55, 72, 0.4)',\n            glow: 'rgba(66, 153, 225, 0.5)'\n        }]\n    ]);\n\n    private static iconMap: Map<string, string> = new Map([\n        ['hospital', '🏥'],\n        ['clinic', '🏨'],\n        ['office', '🏢'],\n        ['pharmacy', '💊'],\n        ['lab', '🔬'],\n        ['emergency', '🚑'],\n        ['default', '📍']\n    ]);\n\n    private static sizeMap: Map<string, { width: number; height: number }> = new Map([\n        ['small', { width: 24, height: 24 }],\n        ['medium', { width: 32, height: 32 }],\n        ['large', { width: 40, height: 40 }],\n        ['xl', { width: 48, height: 48 }]\n    ]);\n\n    static createCustomMarker(options: CustomMarkerOptions = {}): L.DivIcon {\n        const {\n            type = 'default',\n            theme = 'medical',\n            size = 'medium',\n            animated = true,\n            pulsing = false,\n            glowing = false,\n            shadowIntensity = 'medium',\n            customIcon,\n            className = ''\n        } = options;\n\n        const markerTheme = this.themes.get(theme) || this.themes.get('medical')!;\n        const dimensions = this.sizeMap.get(size) || this.sizeMap.get('medium')!;\n        const icon = customIcon || this.iconMap.get(type) || this.iconMap.get('default')!;\n\n        const svgIcon = this.generateSVGIcon({\n            theme: markerTheme,\n            dimensions,\n            icon,\n            animated,\n            pulsing,\n            glowing,\n            shadowIntensity\n        });\n\n        return L.divIcon({\n            html: svgIcon,\n            className: `custom-marker-container ${className} ${animated ? 'animated' : ''} ${pulsing ? 'pulsing' : ''} ${glowing ? 'glowing' : ''}`,\n            iconSize: [dimensions.width, dimensions.height],\n            iconAnchor: [dimensions.width / 2, dimensions.height],\n            popupAnchor: [0, -dimensions.height]\n        });\n    }\n\n    private static generateSVGIcon(config: {\n        theme: MarkerTheme;\n        dimensions: { width: number; height: number };\n        icon: string;\n        animated: boolean;\n        pulsing: boolean;\n        glowing: boolean;\n        shadowIntensity: string;\n    }): string {\n        const { theme, dimensions, icon, animated, pulsing, glowing, shadowIntensity } = config;\n        const { width, height } = dimensions;\n        \n        const shadowOpacity = {\n            none: 0,\n            light: 0.1,\n            medium: 0.2,\n            strong: 0.4\n        }[shadowIntensity] || 0.2;\n\n        const markerId = `marker-${Math.random().toString(36).substr(2, 9)}`;\n        const glowId = `glow-${markerId}`;\n        const pulseId = `pulse-${markerId}`;\n\n        return `\n            <div class=\"marker-wrapper\" style=\"position: relative; width: ${width}px; height: ${height}px;\">\n                <!-- Pulsing Animation Ring -->\n                ${pulsing ? `\n                <div class=\"marker-pulse-ring\" style=\"\n                    position: absolute;\n                    top: 50%;\n                    left: 50%;\n                    width: ${width * 1.8}px;\n                    height: ${width * 1.8}px;\n                    border: 2px solid ${theme.primary};\n                    border-radius: 50%;\n                    transform: translate(-50%, -50%);\n                    opacity: 0.6;\n                    animation: markerPulse 2s infinite ease-out;\n                    z-index: 1;\n                \"></div>\n                ` : ''}\n\n                <!-- Glowing Effect -->\n                ${glowing ? `\n                <div class=\"marker-glow\" style=\"\n                    position: absolute;\n                    top: 50%;\n                    left: 50%;\n                    width: ${width * 1.4}px;\n                    height: ${width * 1.4}px;\n                    background: radial-gradient(circle, ${theme.glow} 0%, transparent 70%);\n                    border-radius: 50%;\n                    transform: translate(-50%, -50%);\n                    animation: markerGlow 3s infinite alternate ease-in-out;\n                    z-index: 2;\n                \"></div>\n                ` : ''}\n\n                <!-- Main SVG Marker -->\n                <svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 32 32\" class=\"marker-svg\" style=\"\n                    position: relative;\n                    z-index: 3;\n                    filter: drop-shadow(0 ${height * 0.1}px ${height * 0.2}px rgba(0, 0, 0, ${shadowOpacity}));\n                    ${animated ? 'transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);' : ''}\n                \">\n                    <!-- Gradient Definitions -->\n                    <defs>\n                        <linearGradient id=\"${markerId}-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                            <stop offset=\"0%\" style=\"stop-color:${theme.primary};stop-opacity:1\" />\n                            <stop offset=\"100%\" style=\"stop-color:${theme.accent};stop-opacity:1\" />\n                        </linearGradient>\n                        <filter id=\"${glowId}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n                            <feGaussianBlur stdDeviation=\"2\" result=\"coloredBlur\"/>\n                            <feMerge> \n                                <feMergeNode in=\"coloredBlur\"/>\n                                <feMergeNode in=\"SourceGraphic\"/>\n                            </feMerge>\n                        </filter>\n                        <radialGradient id=\"${markerId}-radial\" cx=\"50%\" cy=\"30%\" r=\"70%\">\n                            <stop offset=\"0%\" style=\"stop-color:${theme.secondary};stop-opacity:0.9\" />\n                            <stop offset=\"70%\" style=\"stop-color:${theme.primary};stop-opacity:1\" />\n                            <stop offset=\"100%\" style=\"stop-color:${theme.accent};stop-opacity:1\" />\n                        </radialGradient>\n                    </defs>\n\n                    <!-- Marker Shape with Gradient -->\n                    <path d=\"M16 2 C10.5 2 6 6.5 6 12 C6 20 16 30 16 30 C16 30 26 20 26 12 C26 6.5 21.5 2 16 2 Z\" \n                          fill=\"url(#${markerId}-radial)\" \n                          stroke=\"${theme.secondary}\" \n                          stroke-width=\"1\"\n                          ${glowing ? `filter=\"url(#${glowId})\"` : ''}\n                    />\n\n                    <!-- Inner Circle -->\n                    <circle cx=\"16\" cy=\"12\" r=\"6\" \n                            fill=\"${theme.secondary}\" \n                            stroke=\"${theme.primary}\" \n                            stroke-width=\"1.5\"\n                            opacity=\"0.95\" />\n\n                    <!-- Icon Container -->\n                    <foreignObject x=\"10\" y=\"6\" width=\"12\" height=\"12\">\n                        <div style=\"\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            width: 100%;\n                            height: 100%;\n                            font-size: ${width * 0.25}px;\n                            text-align: center;\n                            line-height: 1;\n                        \">${icon}</div>\n                    </foreignObject>\n\n                    <!-- Highlight Effect -->\n                    <ellipse cx=\"20\" cy=\"8\" rx=\"3\" ry=\"2\" \n                             fill=\"${theme.secondary}\" \n                             opacity=\"0.4\" />\n                </svg>\n\n                <!-- Animated Bounce Effect -->\n                ${animated ? `\n                <style>\n                    .marker-wrapper:hover .marker-svg {\n                        transform: scale(1.1) translateY(-2px);\n                        filter: drop-shadow(0 ${height * 0.15}px ${height * 0.3}px rgba(0, 0, 0, ${shadowOpacity * 1.5}));\n                    }\n                </style>\n                ` : ''}\n            </div>\n\n            <style>\n                @keyframes markerPulse {\n                    0% { transform: translate(-50%, -50%) scale(0.8); opacity: 0.8; }\n                    50% { transform: translate(-50%, -50%) scale(1.2); opacity: 0.3; }\n                    100% { transform: translate(-50%, -50%) scale(1.5); opacity: 0; }\n                }\n\n                @keyframes markerGlow {\n                    0% { opacity: 0.5; transform: translate(-50%, -50%) scale(1); }\n                    100% { opacity: 0.8; transform: translate(-50%, -50%) scale(1.1); }\n                }\n\n                @keyframes markerBounce {\n                    0%, 20%, 53%, 80%, 100% { transform: translate3d(0, 0, 0); }\n                    40%, 43% { transform: translate3d(0, -8px, 0); }\n                    70% { transform: translate3d(0, -4px, 0); }\n                    90% { transform: translate3d(0, -2px, 0); }\n                }\n\n                .marker-wrapper.animated .marker-svg {\n                    animation: markerBounce 2s infinite;\n                }\n            </style>\n        `;\n    }\n\n    static createGlassmorphicPopup(content: PopupOptions = {}): string {\n        const {\n            title = 'Location',\n            description = '',\n            imageUrl = '',\n            actions = [],\n            theme = 'glass',\n            maxWidth = 300\n        } = content;\n\n        const popupId = `popup-${Math.random().toString(36).substr(2, 9)}`;\n\n        const themeStyles = {\n            glass: {\n                background: 'rgba(255, 255, 255, 0.25)',\n                backdropFilter: 'blur(10px)',\n                border: '1px solid rgba(255, 255, 255, 0.18)',\n                boxShadow: '0 8px 32px 0 rgba(31, 38, 135, 0.37)'\n            },\n            modern: {\n                background: 'linear-gradient(145deg, #ffffff 0%, #f0f4f8 100%)',\n                backdropFilter: 'none',\n                border: '1px solid rgba(0, 0, 0, 0.1)',\n                boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)'\n            },\n            minimal: {\n                background: '#ffffff',\n                backdropFilter: 'none',\n                border: '1px solid #e2e8f0',\n                boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n            },\n            luxury: {\n                background: 'linear-gradient(145deg, #1a202c 0%, #2d3748 100%)',\n                backdropFilter: 'blur(15px)',\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n                boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.4)'\n            }\n        };\n\n        const style = themeStyles[theme] || themeStyles.glass;\n        const textColor = theme === 'luxury' ? '#ffffff' : '#2d3748';\n        const subTextColor = theme === 'luxury' ? 'rgba(255, 255, 255, 0.8)' : '#718096';\n\n        return `\n            <div id=\"${popupId}\" class=\"glassmorphic-popup\" style=\"\n                max-width: ${maxWidth}px;\n                background: ${style.background};\n                backdrop-filter: ${style.backdropFilter};\n                border: ${style.border};\n                border-radius: 16px;\n                box-shadow: ${style.boxShadow};\n                padding: 0;\n                margin: 0;\n                overflow: hidden;\n                position: relative;\n            \">\n                <!-- Image Header -->\n                ${imageUrl ? `\n                <div class=\"popup-image\" style=\"\n                    width: 100%;\n                    height: 120px;\n                    background-image: url('${imageUrl}');\n                    background-size: cover;\n                    background-position: center;\n                    position: relative;\n                \">\n                    <div style=\"\n                        position: absolute;\n                        bottom: 0;\n                        left: 0;\n                        right: 0;\n                        height: 50%;\n                        background: linear-gradient(transparent, rgba(0, 0, 0, 0.6));\n                    \"></div>\n                </div>\n                ` : ''}\n\n                <!-- Content -->\n                <div class=\"popup-content\" style=\"padding: 20px;\">\n                    <!-- Title -->\n                    <h3 style=\"\n                        margin: 0 0 8px 0;\n                        font-size: 18px;\n                        font-weight: 600;\n                        color: ${textColor};\n                        line-height: 1.3;\n                    \">${title}</h3>\n\n                    <!-- Description -->\n                    ${description ? `\n                    <p style=\"\n                        margin: 0 0 16px 0;\n                        font-size: 14px;\n                        color: ${subTextColor};\n                        line-height: 1.5;\n                    \">${description}</p>\n                    ` : ''}\n\n                    <!-- Actions -->\n                    ${actions.length > 0 ? `\n                    <div class=\"popup-actions\" style=\"\n                        display: flex;\n                        gap: 8px;\n                        flex-wrap: wrap;\n                        margin-top: 16px;\n                    \">\n                        ${actions.map((action, index) => `\n                        <button \n                            onclick=\"window.popupActions['${popupId}-${index}']()\"\n                            style=\"\n                                padding: 8px 16px;\n                                border: none;\n                                border-radius: 8px;\n                                background: rgba(59, 130, 246, 0.8);\n                                color: white;\n                                font-size: 12px;\n                                font-weight: 500;\n                                cursor: pointer;\n                                transition: all 0.2s ease;\n                                backdrop-filter: blur(10px);\n                                ${action.style || ''}\n                            \"\n                            onmouseover=\"this.style.transform='scale(1.05)'; this.style.background='rgba(59, 130, 246, 0.9)'\"\n                            onmouseout=\"this.style.transform='scale(1)'; this.style.background='rgba(59, 130, 246, 0.8)'\"\n                        >\n                            ${action.label}\n                        </button>\n                        `).join('')}\n                    </div>\n                    ` : ''}\n                </div>\n\n                <!-- Decorative Elements -->\n                <div style=\"\n                    position: absolute;\n                    top: 12px;\n                    right: 12px;\n                    width: 40px;\n                    height: 40px;\n                    background: radial-gradient(circle, rgba(255, 255, 255, 0.2) 0%, transparent 70%);\n                    border-radius: 50%;\n                    opacity: 0.6;\n                \"></div>\n\n                <div style=\"\n                    position: absolute;\n                    bottom: 12px;\n                    left: 12px;\n                    width: 20px;\n                    height: 20px;\n                    background: radial-gradient(circle, rgba(59, 130, 246, 0.3) 0%, transparent 70%);\n                    border-radius: 50%;\n                    opacity: 0.8;\n                \"></div>\n            </div>\n\n            <style>\n                .glassmorphic-popup {\n                    animation: popupFadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n                }\n\n                @keyframes popupFadeIn {\n                    from {\n                        opacity: 0;\n                        transform: scale(0.9) translateY(10px);\n                    }\n                    to {\n                        opacity: 1;\n                        transform: scale(1) translateY(0);\n                    }\n                }\n\n                .glassmorphic-popup:hover {\n                    box-shadow: ${style.boxShadow.replace('0.1', '0.15').replace('0.04', '0.08')};\n                    transform: translateY(-2px);\n                    transition: all 0.3s ease;\n                }\n            </style>\n\n            <script>\n                // Store popup actions globally\n                if (!window.popupActions) {\n                    window.popupActions = {};\n                }\n                ${actions.map((action, index) => `\n                window.popupActions['${popupId}-${index}'] = ${action.action.toString()};\n                `).join('')}\n            </script>\n        `;\n    }\n\n    static createMarkerCluster(markers: Array<{\n        lat: number;\n        lng: number;\n        options?: CustomMarkerOptions;\n        popup?: PopupOptions;\n    }>): L.MarkerClusterGroup {\n        // This would require the Leaflet.markercluster plugin\n        // For now, we'll return a basic implementation\n        const markerClusterGroup = (L as any).markerClusterGroup({\n            iconCreateFunction: (cluster: any) => {\n                const count = cluster.getChildCount();\n                let className = 'marker-cluster-small';\n                \n                if (count < 10) {\n                    className = 'marker-cluster-small';\n                } else if (count < 100) {\n                    className = 'marker-cluster-medium';\n                } else {\n                    className = 'marker-cluster-large';\n                }\n                \n                return L.divIcon({\n                    html: `\n                        <div class=\"cluster-inner\">\n                            <div class=\"cluster-count\">${count}</div>\n                            <div class=\"cluster-pulse\"></div>\n                        </div>\n                    `,\n                    className: `marker-cluster ${className}`,\n                    iconSize: [40, 40]\n                });\n            }\n        });\n\n        markers.forEach(markerData => {\n            const marker = L.marker([markerData.lat, markerData.lng], {\n                icon: this.createCustomMarker(markerData.options)\n            });\n\n            if (markerData.popup) {\n                marker.bindPopup(this.createGlassmorphicPopup(markerData.popup));\n            }\n\n            markerClusterGroup.addLayer(marker);\n        });\n\n        return markerClusterGroup;\n    }\n\n    static injectStyles(): void {\n        if (document.getElementById('custom-marker-styles')) return;\n\n        const styles = `\n            <style id=\"custom-marker-styles\">\n                .custom-marker-container {\n                    background: transparent !important;\n                    border: none !important;\n                    cursor: pointer;\n                }\n\n                .marker-cluster {\n                    background-color: rgba(59, 130, 246, 0.8) !important;\n                    border: 3px solid rgba(255, 255, 255, 0.9) !important;\n                    border-radius: 50% !important;\n                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3) !important;\n                    backdrop-filter: blur(10px) !important;\n                }\n\n                .marker-cluster-small {\n                    width: 30px !important;\n                    height: 30px !important;\n                }\n\n                .marker-cluster-medium {\n                    width: 40px !important;\n                    height: 40px !important;\n                }\n\n                .marker-cluster-large {\n                    width: 50px !important;\n                    height: 50px !important;\n                }\n\n                .cluster-inner {\n                    position: relative;\n                    width: 100%;\n                    height: 100%;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n\n                .cluster-count {\n                    color: white;\n                    font-weight: bold;\n                    font-size: 12px;\n                    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n                    position: relative;\n                    z-index: 2;\n                }\n\n                .cluster-pulse {\n                    position: absolute;\n                    top: -5px;\n                    left: -5px;\n                    right: -5px;\n                    bottom: -5px;\n                    border: 2px solid rgba(59, 130, 246, 0.5);\n                    border-radius: 50%;\n                    animation: clusterPulse 2s infinite;\n                }\n\n                @keyframes clusterPulse {\n                    0% { transform: scale(0.8); opacity: 1; }\n                    100% { transform: scale(1.3); opacity: 0; }\n                }\n\n                .leaflet-popup-content-wrapper {\n                    padding: 0 !important;\n                    background: transparent !important;\n                    border-radius: 16px !important;\n                    box-shadow: none !important;\n                }\n\n                .leaflet-popup-content {\n                    margin: 0 !important;\n                }\n\n                .leaflet-popup-tip {\n                    background: rgba(255, 255, 255, 0.25) !important;\n                    backdrop-filter: blur(10px) !important;\n                    border: 1px solid rgba(255, 255, 255, 0.18) !important;\n                }\n            </style>\n        `;\n\n        document.head.insertAdjacentHTML('beforeend', styles);\n    }\n}\n\n// Auto-inject styles when module loads\nif (typeof window !== 'undefined') {\n    CustomMarkerSystem.injectStyles();\n}\n\nexport default CustomMarkerSystem;\nexport { CustomMarkerOptions, PopupOptions, MarkerTheme };","/**\n * 🚀 World-Class Asset Management System\n * \n * Features:\n * - Intelligent asset loading with CDN fallbacks\n * - Local asset generation for missing resources\n * - Progressive enhancement and optimization\n * - Asset caching and preloading\n * - Error recovery and resilience\n * - Performance monitoring\n */\n\ninterface AssetConfig {\n    url: string;\n    fallbacks?: string[];\n    type: 'image' | 'font' | 'css' | 'js' | 'svg';\n    priority: 'high' | 'medium' | 'low';\n    cache?: boolean;\n    timeout?: number;\n    retries?: number;\n}\n\ninterface AssetMetrics {\n    totalRequests: number;\n    successfulLoads: number;\n    failedLoads: number;\n    fallbackUsage: number;\n    averageLoadTime: number;\n    cacheHitRate: number;\n    generatedAssets: number;\n}\n\ninterface GeneratedAssetOptions {\n    type: 'marker-icon' | 'marker-shadow' | 'tile' | 'pattern';\n    color?: string;\n    size?: { width: number; height: number };\n    style?: string;\n    format?: 'svg' | 'png' | 'webp';\n}\n\nclass AssetManager {\n    private static instance: AssetManager;\n    private cache: Map<string, { data: string | HTMLElement; timestamp: number }> = new Map();\n    private loadingPromises: Map<string, Promise<any>> = new Map();\n    private metrics: AssetMetrics;\n    private retryDelays: number[] = [100, 500, 1500, 3000];\n\n    constructor() {\n        this.metrics = {\n            totalRequests: 0,\n            successfulLoads: 0,\n            failedLoads: 0,\n            fallbackUsage: 0,\n            averageLoadTime: 0,\n            cacheHitRate: 0,\n            generatedAssets: 0\n        };\n    }\n\n    static getInstance(): AssetManager {\n        if (!AssetManager.instance) {\n            AssetManager.instance = new AssetManager();\n        }\n        return AssetManager.instance;\n    }\n\n    async loadAsset(config: AssetConfig): Promise<string | HTMLElement | null> {\n        const startTime = performance.now();\n        this.metrics.totalRequests++;\n\n        // Check cache first\n        const cached = this.getCachedAsset(config.url);\n        if (cached) {\n            this.metrics.cacheHitRate = ++this.metrics.successfulLoads / this.metrics.totalRequests;\n            return cached;\n        }\n\n        // Check if already loading\n        if (this.loadingPromises.has(config.url)) {\n            return await this.loadingPromises.get(config.url)!;\n        }\n\n        // Start loading process\n        const loadPromise = this.performAssetLoad(config, startTime);\n        this.loadingPromises.set(config.url, loadPromise);\n\n        try {\n            const result = await loadPromise;\n            this.loadingPromises.delete(config.url);\n            return result;\n        } catch (error) {\n            this.loadingPromises.delete(config.url);\n            throw error;\n        }\n    }\n\n    private async performAssetLoad(config: AssetConfig, startTime: number): Promise<string | HTMLElement | null> {\n        const urls = [config.url, ...(config.fallbacks || [])];\n        let lastError: Error | null = null;\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n            const isOriginal = i === 0;\n\n            try {\n                const result = await this.loadSingleAsset(url, config);\n                \n                if (result) {\n                    // Update metrics\n                    const loadTime = performance.now() - startTime;\n                    this.updateMetrics(true, loadTime, !isOriginal);\n\n                    // Cache if enabled\n                    if (config.cache !== false) {\n                        this.cacheAsset(config.url, result);\n                    }\n\n                    return result;\n                }\n            } catch (error) {\n                lastError = error as Error;\n                console.warn(`Asset load failed for ${url}:`, error);\n            }\n        }\n\n        // All URLs failed, try to generate fallback asset\n        try {\n            const generated = await this.generateFallbackAsset(config);\n            if (generated) {\n                this.metrics.generatedAssets++;\n                this.updateMetrics(true, performance.now() - startTime, true);\n                return generated;\n            }\n        } catch (error) {\n            console.warn('Fallback asset generation failed:', error);\n        }\n\n        // Complete failure\n        this.updateMetrics(false, performance.now() - startTime, false);\n        throw lastError || new Error(`Failed to load asset: ${config.url}`);\n    }\n\n    private async loadSingleAsset(url: string, config: AssetConfig): Promise<string | HTMLElement | null> {\n        return new Promise((resolve, reject) => {\n            const timeout = config.timeout || 10000;\n            let timeoutId: NodeJS.Timeout;\n\n            const cleanup = () => {\n                if (timeoutId) clearTimeout(timeoutId);\n            };\n\n            timeoutId = setTimeout(() => {\n                cleanup();\n                reject(new Error(`Asset load timeout: ${url}`));\n            }, timeout);\n\n            switch (config.type) {\n                case 'image':\n                    this.loadImage(url)\n                        .then(result => { cleanup(); resolve(result); })\n                        .catch(error => { cleanup(); reject(error); });\n                    break;\n                \n                case 'css':\n                    this.loadCSS(url)\n                        .then(result => { cleanup(); resolve(result); })\n                        .catch(error => { cleanup(); reject(error); });\n                    break;\n                \n                case 'js':\n                    this.loadScript(url)\n                        .then(result => { cleanup(); resolve(result); })\n                        .catch(error => { cleanup(); reject(error); });\n                    break;\n                \n                case 'svg':\n                    this.loadSVG(url)\n                        .then(result => { cleanup(); resolve(result); })\n                        .catch(error => { cleanup(); reject(error); });\n                    break;\n                \n                case 'font':\n                    this.loadFont(url)\n                        .then(result => { cleanup(); resolve(result); })\n                        .catch(error => { cleanup(); reject(error); });\n                    break;\n                \n                default:\n                    cleanup();\n                    reject(new Error(`Unsupported asset type: ${config.type}`));\n            }\n        });\n    }\n\n    private loadImage(url: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const img = new Image();\n            img.onload = () => resolve(url);\n            img.onerror = () => reject(new Error(`Failed to load image: ${url}`));\n            img.src = url;\n        });\n    }\n\n    private loadCSS(url: string): Promise<HTMLLinkElement> {\n        return new Promise((resolve, reject) => {\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = url;\n            link.onload = () => resolve(link);\n            link.onerror = () => reject(new Error(`Failed to load CSS: ${url}`));\n            document.head.appendChild(link);\n        });\n    }\n\n    private loadScript(url: string): Promise<HTMLScriptElement> {\n        return new Promise((resolve, reject) => {\n            const script = document.createElement('script');\n            script.src = url;\n            script.onload = () => resolve(script);\n            script.onerror = () => reject(new Error(`Failed to load script: ${url}`));\n            document.head.appendChild(script);\n        });\n    }\n\n    private async loadSVG(url: string): Promise<string> {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(`Failed to load SVG: ${url}`);\n        }\n        return await response.text();\n    }\n\n    private loadFont(url: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const font = new FontFace('CustomFont', `url(${url})`);\n            font.load()\n                .then(() => {\n                    document.fonts.add(font);\n                    resolve(url);\n                })\n                .catch(error => reject(error));\n        });\n    }\n\n    private async generateFallbackAsset(config: AssetConfig): Promise<string | HTMLElement | null> {\n        // Detect asset type from URL\n        const url = config.url.toLowerCase();\n        \n        if (url.includes('marker-icon') || url.includes('marker-shadow')) {\n            return await this.generateMarkerAsset(config);\n        }\n        \n        if (url.includes('tile') || url.includes('png')) {\n            return await this.generateTileAsset(config);\n        }\n\n        return null;\n    }\n\n    private async generateMarkerAsset(config: AssetConfig): Promise<string> {\n        const isIcon = config.url.includes('marker-icon');\n        const is2x = config.url.includes('2x');\n        const isShadow = config.url.includes('shadow');\n\n        const baseSize = is2x ? 50 : 25;\n        const options: GeneratedAssetOptions = {\n            type: isShadow ? 'marker-shadow' : 'marker-icon',\n            color: '#3388ff',\n            size: { width: baseSize, height: isShadow ? baseSize * 0.6 : baseSize * 1.6 },\n            format: 'svg'\n        };\n\n        if (isShadow) {\n            // Generate marker shadow SVG\n            const svg = `\n                <svg width=\"${options.size!.width}\" height=\"${options.size!.height}\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <ellipse cx=\"${options.size!.width / 2}\" cy=\"${options.size!.height / 2}\" \n                             rx=\"${options.size!.width * 0.4}\" ry=\"${options.size!.height * 0.3}\" \n                             fill=\"rgba(0, 0, 0, 0.2)\" \n                             filter=\"blur(2px)\" />\n                </svg>\n            `;\n            \n            // Convert to data URL\n            return `data:image/svg+xml;base64,${btoa(svg)}`;\n        } else {\n            // Generate marker icon SVG\n            const svg = `\n                <svg width=\"${options.size!.width}\" height=\"${options.size!.height}\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <defs>\n                        <linearGradient id=\"markerGrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                            <stop offset=\"0%\" style=\"stop-color:#3388ff;stop-opacity:1\" />\n                            <stop offset=\"100%\" style=\"stop-color:#1166cc;stop-opacity:1\" />\n                        </linearGradient>\n                        <filter id=\"shadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n                            <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"3\" flood-color=\"rgba(0,0,0,0.3)\"/>\n                        </filter>\n                    </defs>\n                    <path d=\"M${baseSize/2} 5 C${baseSize*0.75} 5 ${baseSize*0.9} ${baseSize*0.3} ${baseSize*0.9} ${baseSize*0.5} C${baseSize*0.9} ${baseSize*0.8} ${baseSize/2} ${baseSize*1.4} ${baseSize/2} ${baseSize*1.4} C${baseSize/2} ${baseSize*1.4} ${baseSize*0.1} ${baseSize*0.8} ${baseSize*0.1} ${baseSize*0.5} C${baseSize*0.1} ${baseSize*0.3} ${baseSize*0.25} 5 ${baseSize/2} 5 Z\" \n                          fill=\"url(#markerGrad)\" \n                          stroke=\"white\" \n                          stroke-width=\"2\" \n                          filter=\"url(#shadow)\" />\n                    <circle cx=\"${baseSize/2}\" cy=\"${baseSize*0.5}\" r=\"${baseSize*0.15}\" fill=\"white\" />\n                </svg>\n            `;\n            \n            return `data:image/svg+xml;base64,${btoa(svg)}`;\n        }\n    }\n\n    private async generateTileAsset(config: AssetConfig): Promise<string> {\n        // Generate a placeholder tile\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d')!;\n        canvas.width = 256;\n        canvas.height = 256;\n\n        // Create gradient background\n        const gradient = ctx.createLinearGradient(0, 0, 256, 256);\n        gradient.addColorStop(0, '#f0f4f8');\n        gradient.addColorStop(1, '#e2e8f0');\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, 256, 256);\n\n        // Add pattern\n        ctx.strokeStyle = '#cbd5e0';\n        ctx.lineWidth = 1;\n        for (let i = 0; i < 256; i += 32) {\n            ctx.beginPath();\n            ctx.moveTo(i, 0);\n            ctx.lineTo(i, 256);\n            ctx.stroke();\n            \n            ctx.beginPath();\n            ctx.moveTo(0, i);\n            ctx.lineTo(256, i);\n            ctx.stroke();\n        }\n\n        // Add text\n        ctx.fillStyle = '#a0aec0';\n        ctx.font = '14px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('Map Tile', 128, 128);\n\n        return canvas.toDataURL('image/png');\n    }\n\n    private getCachedAsset(url: string): string | HTMLElement | null {\n        const cached = this.cache.get(url);\n        if (!cached) return null;\n\n        // Check cache expiration (1 hour default)\n        const now = Date.now();\n        const maxAge = 60 * 60 * 1000; // 1 hour\n        \n        if (now - cached.timestamp > maxAge) {\n            this.cache.delete(url);\n            return null;\n        }\n\n        return cached.data;\n    }\n\n    private cacheAsset(url: string, data: string | HTMLElement): void {\n        this.cache.set(url, {\n            data,\n            timestamp: Date.now()\n        });\n\n        // Limit cache size\n        if (this.cache.size > 100) {\n            const oldestKey = this.cache.keys().next().value;\n            this.cache.delete(oldestKey);\n        }\n    }\n\n    private updateMetrics(success: boolean, loadTime: number, usedFallback: boolean): void {\n        if (success) {\n            this.metrics.successfulLoads++;\n        } else {\n            this.metrics.failedLoads++;\n        }\n\n        if (usedFallback) {\n            this.metrics.fallbackUsage++;\n        }\n\n        // Update average load time\n        const totalLoads = this.metrics.successfulLoads + this.metrics.failedLoads;\n        this.metrics.averageLoadTime = (this.metrics.averageLoadTime * (totalLoads - 1) + loadTime) / totalLoads;\n\n        // Update cache hit rate\n        this.metrics.cacheHitRate = this.metrics.successfulLoads / this.metrics.totalRequests;\n    }\n\n    // Public utility methods\n    preloadAssets(configs: AssetConfig[]): Promise<(string | HTMLElement | null)[]> {\n        return Promise.allSettled(\n            configs.map(config => this.loadAsset(config))\n        ).then(results => \n            results.map(result => \n                result.status === 'fulfilled' ? result.value : null\n            )\n        );\n    }\n\n    clearCache(): void {\n        this.cache.clear();\n        console.log('Asset cache cleared');\n    }\n\n    getMetrics(): AssetMetrics {\n        return { ...this.metrics };\n    }\n\n    createPerformanceDashboard(): HTMLElement {\n        const dashboard = document.createElement('div');\n        dashboard.className = 'asset-performance-dashboard';\n        dashboard.innerHTML = `\n            <div class=\"performance-panel\">\n                <h3>📦 Asset Performance</h3>\n                <div class=\"metrics-grid\">\n                    <div class=\"metric\">\n                        <span class=\"label\">Success Rate:</span>\n                        <span class=\"value\" id=\"asset-success-rate\">0%</span>\n                    </div>\n                    <div class=\"metric\">\n                        <span class=\"label\">Cache Hit Rate:</span>\n                        <span class=\"value\" id=\"asset-cache-rate\">0%</span>\n                    </div>\n                    <div class=\"metric\">\n                        <span class=\"label\">Fallback Usage:</span>\n                        <span class=\"value\" id=\"asset-fallback-rate\">0%</span>\n                    </div>\n                    <div class=\"metric\">\n                        <span class=\"label\">Avg Load Time:</span>\n                        <span class=\"value\" id=\"asset-load-time\">0ms</span>\n                    </div>\n                    <div class=\"metric\">\n                        <span class=\"label\">Generated Assets:</span>\n                        <span class=\"value\" id=\"asset-generated\">${this.metrics.generatedAssets}</span>\n                    </div>\n                </div>\n            </div>\n        `;\n\n        // Update dashboard periodically\n        const updateDashboard = () => {\n            const metrics = this.getMetrics();\n            const successRate = metrics.totalRequests > 0 \n                ? Math.round((metrics.successfulLoads / metrics.totalRequests) * 100) \n                : 0;\n            const cacheRate = Math.round(metrics.cacheHitRate * 100);\n            const fallbackRate = metrics.totalRequests > 0 \n                ? Math.round((metrics.fallbackUsage / metrics.totalRequests) * 100) \n                : 0;\n\n            const successEl = dashboard.querySelector('#asset-success-rate');\n            const cacheEl = dashboard.querySelector('#asset-cache-rate');\n            const fallbackEl = dashboard.querySelector('#asset-fallback-rate');\n            const loadTimeEl = dashboard.querySelector('#asset-load-time');\n            const generatedEl = dashboard.querySelector('#asset-generated');\n\n            if (successEl) {\n                successEl.textContent = `${successRate}%`;\n                successEl.className = `value ${successRate > 90 ? 'good' : successRate > 70 ? 'warning' : 'error'}`;\n            }\n            if (cacheEl) cacheEl.textContent = `${cacheRate}%`;\n            if (fallbackEl) fallbackEl.textContent = `${fallbackRate}%`;\n            if (loadTimeEl) loadTimeEl.textContent = `${Math.round(metrics.averageLoadTime)}ms`;\n            if (generatedEl) generatedEl.textContent = metrics.generatedAssets.toString();\n        };\n\n        updateDashboard();\n        setInterval(updateDashboard, 2000);\n\n        return dashboard;\n    }\n\n    // Leaflet-specific asset management\n    async setupLeafletAssets(): Promise<void> {\n        const leafletAssets: AssetConfig[] = [\n            {\n                url: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n                fallbacks: [\n                    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png'\n                ],\n                type: 'image',\n                priority: 'high',\n                cache: true\n            },\n            {\n                url: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n                fallbacks: [\n                    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png'\n                ],\n                type: 'image',\n                priority: 'medium',\n                cache: true\n            },\n            {\n                url: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\n                fallbacks: [\n                    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png'\n                ],\n                type: 'image',\n                priority: 'medium',\n                cache: true\n            }\n        ];\n\n        try {\n            await this.preloadAssets(leafletAssets);\n            console.log('✅ Leaflet assets loaded successfully');\n        } catch (error) {\n            console.warn('⚠️ Some Leaflet assets failed to load, fallbacks generated');\n        }\n    }\n}\n\n// Export singleton instance\nconst assetManager = AssetManager.getInstance();\n\nexport default assetManager;\nexport { AssetConfig, AssetMetrics, GeneratedAssetOptions, AssetManager };","/**\n * 🚀 Leaflet Utilities Entry Point\n * \n * Centralized export of all Leaflet-related utilities to prevent\n * direct TypeScript imports in Blade templates.\n */\n\nimport OptimizedResizeObserver, { \n    createOptimizedResizeObserver, \n    suppressResizeObserverErrors, \n    getResizeObserverMetrics, \n    enableGlobalOptimization \n} from './utils/OptimizedResizeObserver';\n\nimport CustomMarkerSystem, { \n    type CustomMarkerOptions, \n    type PopupOptions, \n    type MarkerTheme \n} from './utils/CustomMarkerSystem';\n\nimport AssetManager, { \n    type AssetConfig, \n    type AssetMetrics, \n    type GeneratedAssetOptions \n} from './utils/AssetManager';\n\n// Make utilities globally available\ndeclare global {\n    interface Window {\n        LeafletUtilities: {\n            OptimizedResizeObserver: typeof OptimizedResizeObserver;\n            createOptimizedResizeObserver: typeof createOptimizedResizeObserver;\n            suppressResizeObserverErrors: typeof suppressResizeObserverErrors;\n            getResizeObserverMetrics: typeof getResizeObserverMetrics;\n            enableGlobalOptimization: typeof enableGlobalOptimization;\n            CustomMarkerSystem: typeof CustomMarkerSystem;\n            AssetManager: typeof AssetManager;\n        };\n    }\n}\n\n// Initialize global utilities object\nconst LeafletUtilities = {\n    OptimizedResizeObserver,\n    createOptimizedResizeObserver,\n    suppressResizeObserverErrors,\n    getResizeObserverMetrics,\n    enableGlobalOptimization,\n    CustomMarkerSystem,\n    AssetManager,\n};\n\n// Export for module usage\nexport {\n    OptimizedResizeObserver,\n    createOptimizedResizeObserver,\n    suppressResizeObserverErrors,\n    getResizeObserverMetrics,\n    enableGlobalOptimization,\n    CustomMarkerSystem,\n    AssetManager,\n    LeafletUtilities as default\n};\n\n// Types export\nexport type {\n    CustomMarkerOptions,\n    PopupOptions,\n    MarkerTheme,\n    AssetConfig,\n    AssetMetrics,\n    GeneratedAssetOptions\n};\n\n// Make available globally for direct browser usage\nif (typeof window !== 'undefined') {\n    window.LeafletUtilities = LeafletUtilities;\n    \n    // Initialize optimizations\n    enableGlobalOptimization();\n    suppressResizeObserverErrors();\n    \n    console.log('✅ Leaflet utilities loaded and optimizations enabled');\n}"],"names":["_OptimizedResizeObserver","callback","options","__publicField","originalCallback","entries","observer","startTime","error","callbackTime","sum","time","performanceRatio","loopPenalty","originalError","args","_a","_b","message","errorCount","monitorPerformance","target","allMetrics","m","element","entry","width","height","dashboard","updateDashboard","metrics","activeEl","scoreEl","loopsEl","timeEl","OptimizedResizeObserver","createOptimizedResizeObserver","suppressResizeObserverErrors","getResizeObserverMetrics","enableGlobalOptimization","CustomMarkerSystem","type","theme","size","animated","pulsing","glowing","shadowIntensity","customIcon","className","markerTheme","dimensions","icon","svgIcon","config","shadowOpacity","markerId","glowId","content","title","description","imageUrl","actions","maxWidth","popupId","themeStyles","style","textColor","subTextColor","action","index","markers","markerClusterGroup","cluster","count","markerData","marker","_AssetManager","cached","loadPromise","result","urls","lastError","i","url","isOriginal","loadTime","generated","resolve","reject","timeout","timeoutId","cleanup","img","link","script","response","font","is2x","isShadow","baseSize","svg","canvas","ctx","gradient","now","maxAge","data","oldestKey","success","usedFallback","totalLoads","configs","results","successRate","cacheRate","fallbackRate","successEl","cacheEl","fallbackEl","loadTimeEl","generatedEl","leafletAssets","AssetManager","assetManager","LeafletUtilities"],"mappings":"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"}