{"version":3,"file":"widget-animations-C3Cz4mpR.js","sources":["../../../../resources/js/widget-animations.js"],"sourcesContent":["/**\n * Advanced Widget Animation System\n * World-class micro-interactions for Filament widgets\n */\n\nclass WidgetAnimationController {\n    constructor() {\n        this.init();\n        this.setupObservers();\n        this.setupEventListeners();\n    }\n\n    init() {\n        // Initialize on DOM ready\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', () => this.start());\n        } else {\n            this.start();\n        }\n    }\n\n    start() {\n        this.animateCounters();\n        this.setupProgressCircles();\n        this.setupHoverEffects();\n        this.setupTooltips();\n        this.setupLoadingStates();\n    }\n\n    setupObservers() {\n        // Intersection Observer for scroll-triggered animations\n        this.intersectionObserver = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    this.triggerEntryAnimation(entry.target);\n                }\n            });\n        }, {\n            threshold: 0.1,\n            rootMargin: '50px'\n        });\n\n        // Observe all widget cards\n        document.querySelectorAll('.fi-wi-stats-overview-card').forEach(card => {\n            this.intersectionObserver.observe(card);\n        });\n    }\n\n    setupEventListeners() {\n        // Listen for Livewire updates\n        document.addEventListener('livewire:update', () => {\n            setTimeout(() => this.start(), 100);\n        });\n\n        // Listen for Filament panel updates\n        document.addEventListener('filament-panel-update', () => {\n            setTimeout(() => this.start(), 100);\n        });\n    }\n\n    animateCounters() {\n        const counters = document.querySelectorAll('.animate-counter');\n        \n        counters.forEach(counter => {\n            if (counter.dataset.animated) return;\n            \n            const target = this.extractNumber(counter.textContent);\n            if (target === null) return;\n\n            counter.dataset.animated = 'true';\n            this.animateCounterValue(counter, 0, target, 1000);\n        });\n    }\n\n    extractNumber(text) {\n        const match = text.match(/[\\d,]+/);\n        return match ? parseInt(match[0].replace(/,/g, '')) : null;\n    }\n\n    animateCounterValue(element, start, end, duration) {\n        const startTime = performance.now();\n        const originalText = element.textContent;\n        const prefix = originalText.replace(/[\\d,]+/, '');\n        \n        const animate = (currentTime) => {\n            const elapsed = currentTime - startTime;\n            const progress = Math.min(elapsed / duration, 1);\n            \n            // Easing function for smooth animation\n            const easeOut = 1 - Math.pow(1 - progress, 3);\n            const current = Math.floor(start + (end - start) * easeOut);\n            \n            // Format number with thousands separator\n            const formattedNumber = current.toLocaleString('id-ID');\n            element.textContent = originalText.replace(/[\\d,]+/, formattedNumber);\n            \n            if (progress < 1) {\n                requestAnimationFrame(animate);\n            }\n        };\n        \n        requestAnimationFrame(animate);\n    }\n\n    setupProgressCircles() {\n        const circles = document.querySelectorAll('.progress-circle');\n        \n        circles.forEach(circle => {\n            const percentage = circle.dataset.percentage || 0;\n            const progressFill = circle.querySelector('.progress-fill');\n            \n            if (progressFill) {\n                setTimeout(() => {\n                    const circumference = 2 * Math.PI * 16; // radius = 16\n                    const offset = circumference - (percentage / 100) * circumference;\n                    progressFill.style.strokeDashoffset = offset;\n                    circle.classList.add('animate');\n                }, 500);\n            }\n        });\n    }\n\n    setupHoverEffects() {\n        // Enhanced hover effects for interactive elements\n        const interactiveElements = document.querySelectorAll('.quick-action-card, .notification-card, .fi-wi-stats-overview-card');\n        \n        interactiveElements.forEach(element => {\n            element.addEventListener('mouseenter', (e) => {\n                this.addHoverGlow(e.target);\n                this.animateIcons(e.target);\n            });\n            \n            element.addEventListener('mouseleave', (e) => {\n                this.removeHoverGlow(e.target);\n            });\n        });\n    }\n\n    addHoverGlow(element) {\n        const glowElement = document.createElement('div');\n        glowElement.className = 'absolute inset-0 bg-gradient-to-r from-primary-500/10 to-transparent rounded-2xl pointer-events-none transition-opacity duration-300';\n        glowElement.style.opacity = '0';\n        \n        element.style.position = 'relative';\n        element.appendChild(glowElement);\n        \n        requestAnimationFrame(() => {\n            glowElement.style.opacity = '1';\n        });\n    }\n\n    removeHoverGlow(element) {\n        const glowElement = element.querySelector('.absolute.inset-0.bg-gradient-to-r');\n        if (glowElement) {\n            glowElement.style.opacity = '0';\n            setTimeout(() => {\n                if (glowElement.parentNode) {\n                    glowElement.parentNode.removeChild(glowElement);\n                }\n            }, 300);\n        }\n    }\n\n    animateIcons(element) {\n        const icons = element.querySelectorAll('svg, .bounce-icon, .rotate-icon');\n        icons.forEach((icon, index) => {\n            setTimeout(() => {\n                if (icon.classList.contains('bounce-icon')) {\n                    icon.style.animation = 'smooth-bounce 0.6s ease-in-out';\n                } else if (icon.classList.contains('rotate-icon')) {\n                    icon.style.animation = 'rotate-scale 0.8s ease-in-out';\n                } else {\n                    icon.style.transform = 'scale(1.1) rotate(5deg)';\n                    icon.style.transition = 'transform 0.3s ease-out';\n                }\n                \n                setTimeout(() => {\n                    icon.style.animation = '';\n                    icon.style.transform = '';\n                }, 600);\n            }, index * 100);\n        });\n    }\n\n    setupTooltips() {\n        const tooltipElements = document.querySelectorAll('[data-tooltip]');\n        \n        tooltipElements.forEach(element => {\n            element.addEventListener('mouseenter', (e) => {\n                this.showTooltip(e.target, e.target.dataset.tooltip);\n            });\n            \n            element.addEventListener('mouseleave', (e) => {\n                this.hideTooltip(e.target);\n            });\n        });\n    }\n\n    showTooltip(element, text) {\n        const tooltip = document.createElement('div');\n        tooltip.className = 'tooltip';\n        tooltip.textContent = text;\n        \n        // Safety check for document.body\n        if (document.body) {\n            document.body.appendChild(tooltip);\n        } else {\n            // Fallback: append to document.documentElement if body not ready\n            document.documentElement.appendChild(tooltip);\n        }\n        \n        const rect = element.getBoundingClientRect();\n        tooltip.style.left = rect.left + (rect.width / 2) + 'px';\n        tooltip.style.top = rect.top - 40 + 'px';\n        \n        requestAnimationFrame(() => {\n            tooltip.classList.add('show');\n        });\n        \n        element._tooltip = tooltip;\n    }\n\n    hideTooltip(element) {\n        if (element._tooltip) {\n            element._tooltip.classList.remove('show');\n            setTimeout(() => {\n                if (element._tooltip && element._tooltip.parentNode) {\n                    element._tooltip.parentNode.removeChild(element._tooltip);\n                }\n                element._tooltip = null;\n            }, 200);\n        }\n    }\n\n    setupLoadingStates() {\n        // Enhanced loading animations\n        const loadingElements = document.querySelectorAll('.skeleton-loading');\n        \n        loadingElements.forEach((element, index) => {\n            element.style.animationDelay = (index * 0.1) + 's';\n        });\n        \n        // Loading dots animation\n        const loadingDots = document.querySelectorAll('.loading-dots');\n        loadingDots.forEach(container => {\n            if (container.children.length === 0) {\n                for (let i = 0; i < 3; i++) {\n                    const dot = document.createElement('div');\n                    container.appendChild(dot);\n                }\n            }\n        });\n    }\n\n    triggerEntryAnimation(element) {\n        if (element.dataset.entryAnimated) return;\n        \n        element.dataset.entryAnimated = 'true';\n        element.style.opacity = '0';\n        element.style.transform = 'translateY(30px)';\n        \n        requestAnimationFrame(() => {\n            element.style.transition = 'all 0.6s ease-out';\n            element.style.opacity = '1';\n            element.style.transform = 'translateY(0)';\n        });\n    }\n\n    // Utility methods for external use\n    static animateValue(element, targetValue, duration = 1000) {\n        const controller = new WidgetAnimationController();\n        controller.animateCounterValue(element, 0, targetValue, duration);\n    }\n\n    static addLoadingState(element) {\n        element.classList.add('skeleton-loading');\n        const loadingDots = document.createElement('div');\n        loadingDots.className = 'loading-dots';\n        for (let i = 0; i < 3; i++) {\n            loadingDots.appendChild(document.createElement('div'));\n        }\n        element.appendChild(loadingDots);\n    }\n\n    static removeLoadingState(element) {\n        element.classList.remove('skeleton-loading');\n        const loadingDots = element.querySelector('.loading-dots');\n        if (loadingDots) {\n            loadingDots.remove();\n        }\n    }\n}\n\n// Chart animation utilities\nclass ChartAnimationController {\n    static animateChartBars(chartContainer) {\n        const bars = chartContainer.querySelectorAll('rect, .chart-bar');\n        bars.forEach((bar, index) => {\n            bar.style.transform = 'scaleY(0)';\n            bar.style.transformOrigin = 'bottom';\n            bar.style.transition = `transform ${0.5 + index * 0.1}s ease-out`;\n            \n            setTimeout(() => {\n                bar.style.transform = 'scaleY(1)';\n            }, index * 100);\n        });\n    }\n\n    static animateChartLines(chartContainer) {\n        const lines = chartContainer.querySelectorAll('path, .chart-line');\n        lines.forEach((line, index) => {\n            const length = line.getTotalLength ? line.getTotalLength() : 100;\n            line.style.strokeDasharray = length;\n            line.style.strokeDashoffset = length;\n            line.style.transition = `stroke-dashoffset ${1 + index * 0.2}s ease-out`;\n            \n            setTimeout(() => {\n                line.style.strokeDashoffset = 0;\n            }, index * 200);\n        });\n    }\n}\n\n// Initialize the animation system\nconst widgetAnimations = new WidgetAnimationController();\n\n// Make controllers available globally\nwindow.WidgetAnimationController = WidgetAnimationController;\nwindow.ChartAnimationController = ChartAnimationController;\n\n// Auto-refresh animations for dynamic content\nsetInterval(() => {\n    if (document.hidden) return;\n    \n    const newCounters = document.querySelectorAll('.animate-counter:not([data-animated])');\n    if (newCounters.length > 0) {\n        widgetAnimations.animateCounters();\n    }\n}, 2000);"],"names":["WidgetAnimationController","entries","entry","card","counter","target","text","match","element","start","end","duration","startTime","originalText","animate","currentTime","elapsed","progress","easeOut","formattedNumber","circle","percentage","progressFill","circumference","offset","e","glowElement","icon","index","tooltip","rect","container","i","dot","targetValue","loadingDots","ChartAnimationController","chartContainer","bar","line","length","widgetAnimations"],"mappings":"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"}